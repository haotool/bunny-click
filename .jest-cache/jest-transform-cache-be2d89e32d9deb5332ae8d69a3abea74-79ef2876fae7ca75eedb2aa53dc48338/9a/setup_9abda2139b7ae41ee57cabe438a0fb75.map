{"version":3,"names":["global","requestAnimationFrame","callback","setTimeout","cancelAnimationFrame","id","clearTimeout","performance","now","jest","fn","Date","mark","measure","getEntriesByName","getEntriesByType","memory","usedJSHeapSize","totalJSHeapSize","jsHeapSizeLimit","URL","require","Request","MockRequest","constructor","url","options","href","method","headers","Map","Object","entries","Response","MockResponse","body","status","ok","json","JSON","parse","text","defineProperty","value","userAgent","serviceWorker","register","mockResolvedValue","writable","addEventListener","removeEventListener","originalError","console","error","args","includes","apply","beforeEach","ServiceWorkerRegistration","MockServiceWorkerRegistration","active","installing","waiting","scope","updatefound","event","listener","update","Promise","resolve","unregister"],"sources":["setup.js"],"sourcesContent":["/**\n * Jest 測試環境設置文件\n * 提供瀏覽器環境 polyfills 與模擬對象\n * [context7:/jestjs/jest:2025-08-20T01:33:46+08:00]\n */\n\n// DOM polyfills for jsdom environment\nglobal.requestAnimationFrame = (callback) => {\n  return setTimeout(callback, 0);\n};\n\nglobal.cancelAnimationFrame = (id) => {\n  clearTimeout(id);\n};\n\n// Performance API polyfill with Jest mocks\nif (!global.performance) {\n  global.performance = {\n    now: jest.fn(() => Date.now()),\n    mark: jest.fn(),\n    measure: jest.fn(), \n    getEntriesByName: jest.fn(() => []),\n    getEntriesByType: jest.fn(() => []),\n    memory: {\n      usedJSHeapSize: 10 * 1024 * 1024, // 10MB mock value\n      totalJSHeapSize: 20 * 1024 * 1024,\n      jsHeapSizeLimit: 100 * 1024 * 1024,\n    },\n  };\n}\n\n// URL constructor polyfill for Web API tests\nglobal.URL = global.URL || require('url').URL;\n\n// Request/Response polyfills for PWA tests\nglobal.Request = global.Request || class MockRequest {\n  constructor(url, options = {}) {\n    this.url = new URL(url, 'http://localhost').href;\n    this.method = options.method || 'GET';\n    this.headers = new Map(Object.entries(options.headers || {}));\n  }\n};\n\nglobal.Response = global.Response || class MockResponse {\n  constructor(body, options = {}) {\n    this.body = body;\n    this.status = options.status || 200;\n    this.headers = new Map(Object.entries(options.headers || {}));\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n  \n  async json() {\n    return JSON.parse(this.body);\n  }\n  \n  async text() {\n    return this.body;\n  }\n};\n\n// Navigator polyfill\nObject.defineProperty(global, 'navigator', {\n  value: {\n    userAgent: 'Mozilla/5.0 (Test Environment)',\n    serviceWorker: {\n      register: jest.fn().mockResolvedValue({}),\n    },\n  },\n  writable: true,\n});\n\n// Window event listener polyfill\nglobal.addEventListener = global.addEventListener || jest.fn();\nglobal.removeEventListener = global.removeEventListener || jest.fn();\n\n// Console polyfill for cleaner test output\nconst originalError = console.error;\nconsole.error = (...args) => {\n  // Suppress expected errors in test environment\n  if (args[0] && typeof args[0] === 'string' && \n      (args[0].includes('Warning:') || args[0].includes('React'))) {\n    return;\n  }\n  originalError.apply(console, args);\n};\n\n// Jest global setup for DOM mocks\nglobal.beforeEach = global.beforeEach || (() => {});\n\n// Service Worker 模擬（用於 PWA 測試）\nglobal.ServiceWorkerRegistration = class MockServiceWorkerRegistration {\n  constructor() {\n    this.active = null;\n    this.installing = null;\n    this.waiting = null;\n    this.scope = 'http://localhost/';\n    this.updatefound = null;\n  }\n\n  addEventListener(event, listener) {\n    if (event === 'updatefound') {\n      this.updatefound = listener;\n    }\n  }\n\n  removeEventListener() {}\n\n  update() {\n    return Promise.resolve();\n  }\n\n  unregister() {\n    return Promise.resolve(true);\n  }\n};"],"mappings":"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","ignoreList":[]}