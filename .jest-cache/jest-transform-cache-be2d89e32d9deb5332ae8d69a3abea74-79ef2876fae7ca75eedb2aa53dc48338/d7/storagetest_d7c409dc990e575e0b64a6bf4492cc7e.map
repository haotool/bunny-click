{"version":3,"names":["StorageAdapter","GameStorage","require","LocalStorageAdapter","IndexedDBAdapter","global","indexedDB","IDBKeyRange","describe","storageAdapter","beforeEach","localStorage","clear","debug","dbName","version","init","afterEach","test","key","value","setItem","result","getItem","expect","toBe","name","features","toEqual","nested","toBeNull","removeItem","keys","values","i","length","testData","sound","Object","entries","toContain","testKeys","size","info","getAdapterInfo","toHaveProperty","isInitialized","ttl","Promise","resolve","setTimeout","primaryAdapter","getFullKey","gameStorage","settings","soundEnabled","vibrationEnabled","effectsEnabled","theme","saveSettings","getSettings","toMatchObject","mode","score","tps","saveHighScore","getHighScore","timestamp","any","Number","date","String","gameData","duration","peakTPS","averageTPS","saveGameHistory","history","getGameHistory","toHaveLength","id","toBeLessThanOrEqual","not","clearGameData","adapter","isAvailable","fullKey","complex","stats","getStats","itemCount","totalSize","toBeGreaterThan","originalIndexedDB","undefined","preferredStorage","primary"],"sources":["storage.test.js"],"sourcesContent":["/**\n * 儲存系統測試\n * 測試 StorageAdapter、LocalStorageAdapter、IndexedDBAdapter 和 GameStorage\n * \n * @author haotool\n * @version 7.2.3\n * @created 2025-08-18T02:39:58+08:00\n */\n\nconst { StorageAdapter, GameStorage } = require('../storage/adapter.js');\nconst { LocalStorageAdapter } = require('../storage/localStorage.js');\nconst { IndexedDBAdapter } = require('../storage/indexedDB.js');\n\n// Mock IndexedDB for testing\nglobal.indexedDB = require('fake-indexeddb');\nglobal.IDBKeyRange = require('fake-indexeddb/lib/FDBKeyRange');\n\ndescribe('StorageAdapter', () => {\n  let storageAdapter;\n  \n  beforeEach(async () => {\n    // 清理 localStorage\n    localStorage.clear();\n    \n    // 建立測試用適配器\n    storageAdapter = new StorageAdapter({\n      debug: true,\n      dbName: 'TestDB',\n      version: 1\n    });\n    \n    await storageAdapter.init();\n  });\n  \n  afterEach(async () => {\n    if (storageAdapter) {\n      await storageAdapter.clear();\n    }\n  });\n\n  describe('基本操作', () => {\n    test('應該能儲存和讀取字串資料', async () => {\n      const key = 'test-string';\n      const value = 'Hello World';\n      \n      await storageAdapter.setItem(key, value);\n      const result = await storageAdapter.getItem(key);\n      \n      expect(result).toBe(value);\n    });\n\n    test('應該能儲存和讀取物件資料', async () => {\n      const key = 'test-object';\n      const value = {\n        name: 'Bunny Click',\n        version: '7.2.3',\n        features: ['PWA', 'Offline', 'Multi-touch']\n      };\n      \n      await storageAdapter.setItem(key, value);\n      const result = await storageAdapter.getItem(key);\n      \n      expect(result).toEqual(value);\n    });\n\n    test('應該能儲存和讀取數組資料', async () => {\n      const key = 'test-array';\n      const value = [1, 2, 3, 'test', { nested: true }];\n      \n      await storageAdapter.setItem(key, value);\n      const result = await storageAdapter.getItem(key);\n      \n      expect(result).toEqual(value);\n    });\n\n    test('讀取不存在的鍵應該返回 null', async () => {\n      const result = await storageAdapter.getItem('non-existent-key');\n      expect(result).toBeNull();\n    });\n\n    test('應該能移除資料', async () => {\n      const key = 'test-remove';\n      const value = 'to be removed';\n      \n      await storageAdapter.setItem(key, value);\n      expect(await storageAdapter.getItem(key)).toBe(value);\n      \n      await storageAdapter.removeItem(key);\n      expect(await storageAdapter.getItem(key)).toBeNull();\n    });\n\n    test('應該能清空所有資料', async () => {\n      const keys = ['key1', 'key2', 'key3'];\n      const values = ['value1', 'value2', 'value3'];\n      \n      // 儲存多筆資料\n      for (let i = 0; i < keys.length; i++) {\n        await storageAdapter.setItem(keys[i], values[i]);\n      }\n      \n      // 驗證資料存在\n      for (let i = 0; i < keys.length; i++) {\n        expect(await storageAdapter.getItem(keys[i])).toBe(values[i]);\n      }\n      \n      // 清空所有資料\n      await storageAdapter.clear();\n      \n      // 驗證資料已被清空\n      for (const key of keys) {\n        expect(await storageAdapter.getItem(key)).toBeNull();\n      }\n    });\n  });\n\n  describe('進階功能', () => {\n    test('應該能獲取所有鍵名', async () => {\n      const testData = {\n        'game:score': 100,\n        'game:settings': { sound: true },\n        'user:name': 'Player1'\n      };\n      \n      for (const [key, value] of Object.entries(testData)) {\n        await storageAdapter.setItem(key, value);\n      }\n      \n      const keys = await storageAdapter.keys();\n      \n      for (const key of Object.keys(testData)) {\n        expect(keys).toContain(key);\n      }\n    });\n\n    test('應該能獲取儲存項目數量', async () => {\n      const testKeys = ['test1', 'test2', 'test3'];\n      \n      // 初始大小應為 0\n      expect(await storageAdapter.size()).toBe(0);\n      \n      // 逐一加入資料\n      for (let i = 0; i < testKeys.length; i++) {\n        await storageAdapter.setItem(testKeys[i], `value${i}`);\n        expect(await storageAdapter.size()).toBe(i + 1);\n      }\n    });\n\n    test('應該能獲取適配器資訊', () => {\n      const info = storageAdapter.getAdapterInfo();\n      \n      expect(info).toHaveProperty('primary');\n      expect(info).toHaveProperty('fallback');\n      expect(info).toHaveProperty('isInitialized');\n      expect(info).toHaveProperty('config');\n      expect(info.isInitialized).toBe(true);\n    });\n  });\n\n  describe('TTL 過期機制', () => {\n    test('資料應該在 TTL 過期後自動移除', async () => {\n      const key = 'test-ttl';\n      const value = 'will expire';\n      const ttl = 100; // 100ms\n      \n      await storageAdapter.setItem(key, value, { ttl });\n      \n      // 立即讀取應該成功\n      expect(await storageAdapter.getItem(key)).toBe(value);\n      \n      // 等待過期\n      await new Promise(resolve => setTimeout(resolve, ttl + 50));\n      \n      // 過期後讀取應該返回 null\n      expect(await storageAdapter.getItem(key)).toBeNull();\n    });\n  });\n\n  describe('錯誤處理', () => {\n    test('應該處理無效的 JSON 資料', async () => {\n      // 直接在 localStorage 中設定無效 JSON\n      const key = storageAdapter.primaryAdapter.getFullKey('invalid-json');\n      localStorage.setItem(key, 'invalid json data');\n      \n      const result = await storageAdapter.getItem('invalid-json');\n      expect(result).toBeNull();\n    });\n  });\n});\n\ndescribe('GameStorage', () => {\n  let gameStorage;\n  let storageAdapter;\n  \n  beforeEach(async () => {\n    localStorage.clear();\n    \n    storageAdapter = new StorageAdapter({\n      debug: true,\n      dbName: 'GameTestDB',\n      version: 1\n    });\n    \n    await storageAdapter.init();\n    gameStorage = new GameStorage(storageAdapter);\n  });\n  \n  afterEach(async () => {\n    if (storageAdapter) {\n      await storageAdapter.clear();\n    }\n  });\n\n  describe('遊戲設定', () => {\n    test('應該能儲存和讀取遊戲設定', async () => {\n      const settings = {\n        soundEnabled: false,\n        vibrationEnabled: true,\n        effectsEnabled: false,\n        theme: 'dark'\n      };\n      \n      await gameStorage.saveSettings(settings);\n      const result = await gameStorage.getSettings();\n      \n      expect(result).toMatchObject(settings);\n    });\n\n    test('應該提供預設設定', async () => {\n      const settings = await gameStorage.getSettings();\n      \n      expect(settings).toHaveProperty('soundEnabled');\n      expect(settings).toHaveProperty('vibrationEnabled');\n      expect(settings).toHaveProperty('effectsEnabled');\n      expect(settings).toHaveProperty('theme');\n      \n      // 預設值\n      expect(settings.soundEnabled).toBe(true);\n      expect(settings.vibrationEnabled).toBe(true);\n      expect(settings.effectsEnabled).toBe(true);\n      expect(settings.theme).toBe('auto');\n    });\n  });\n\n  describe('最高分記錄', () => {\n    test('應該能儲存和讀取最高分', async () => {\n      const mode = 'single-30s';\n      const score = 150;\n      const tps = 25.5;\n      \n      await gameStorage.saveHighScore(mode, score, tps);\n      const result = await gameStorage.getHighScore(mode);\n      \n      expect(result).toMatchObject({\n        score,\n        tps,\n        timestamp: expect.any(Number),\n        date: expect.any(String)\n      });\n    });\n\n    test('不存在的模式應該返回 null', async () => {\n      const result = await gameStorage.getHighScore('non-existent-mode');\n      expect(result).toBeNull();\n    });\n  });\n\n  describe('遊戲歷史', () => {\n    test('應該能儲存遊戲歷史', async () => {\n      const gameData = {\n        mode: 'single',\n        duration: 30000,\n        score: 120,\n        peakTPS: 30,\n        averageTPS: 20\n      };\n      \n      await gameStorage.saveGameHistory(gameData);\n      const history = await gameStorage.getGameHistory();\n      \n      expect(history).toHaveLength(1);\n      expect(history[0]).toMatchObject({\n        ...gameData,\n        id: expect.any(Number),\n        timestamp: expect.any(Number)\n      });\n    });\n\n    test('應該限制歷史記錄數量', async () => {\n      // 新增超過限制的記錄\n      for (let i = 0; i < 105; i++) {\n        await gameStorage.saveGameHistory({\n          mode: 'test',\n          duration: 1000,\n          score: i,\n          peakTPS: i,\n          averageTPS: i\n        });\n      }\n      \n      const history = await gameStorage.getGameHistory();\n      expect(history.length).toBeLessThanOrEqual(100);\n      \n      // 應該保留最新的記錄\n      expect(history[0].score).toBe(104);\n    });\n\n    test('空歷史應該返回空陣列', async () => {\n      const history = await gameStorage.getGameHistory();\n      expect(history).toEqual([]);\n    });\n  });\n\n  describe('資料管理', () => {\n    test('應該能清空遊戲資料', async () => {\n      // 新增各種遊戲資料\n      await gameStorage.saveSettings({ soundEnabled: false });\n      await gameStorage.saveHighScore('single', 100, 20);\n      await gameStorage.saveGameHistory({\n        mode: 'single',\n        duration: 30000,\n        score: 100,\n        peakTPS: 20,\n        averageTPS: 15\n      });\n      \n      // 確認資料存在\n      expect(await gameStorage.getSettings()).toMatchObject({ soundEnabled: false });\n      expect(await gameStorage.getHighScore('single')).not.toBeNull();\n      expect(await gameStorage.getGameHistory()).toHaveLength(1);\n      \n      // 清空遊戲資料\n      await gameStorage.clearGameData();\n      \n      // 確認資料已清空\n      expect(await gameStorage.getSettings()).toMatchObject({ soundEnabled: true }); // 預設值\n      expect(await gameStorage.getHighScore('single')).toBeNull();\n      expect(await gameStorage.getGameHistory()).toEqual([]);\n    });\n  });\n});\n\ndescribe('LocalStorageAdapter', () => {\n  let adapter;\n  \n  beforeEach(() => {\n    localStorage.clear();\n    adapter = new LocalStorageAdapter({\n      debug: true,\n      dbName: 'TestLS'\n    });\n  });\n  \n  afterEach(async () => {\n    if (adapter) {\n      await adapter.clear();\n    }\n  });\n\n  test('應該檢測到 LocalStorage 可用性', () => {\n    expect(adapter.isAvailable).toBe(true);\n  });\n\n  test('應該正確生成完整鍵名', () => {\n    const key = 'testKey';\n    const fullKey = adapter.getFullKey(key);\n    \n    expect(fullKey).toBe('TestLS:testKey');\n  });\n\n  test('應該能獲取使用統計', async () => {\n    await adapter.init();\n    \n    // 新增一些測試資料\n    await adapter.setItem('test1', 'value1');\n    await adapter.setItem('test2', { complex: 'object' });\n    \n    const stats = await adapter.getStats();\n    \n    expect(stats).toHaveProperty('itemCount');\n    expect(stats).toHaveProperty('totalSize');\n    expect(stats).toHaveProperty('formattedSize');\n    expect(stats).toHaveProperty('usagePercentage');\n    \n    expect(stats.itemCount).toBe(2);\n    expect(stats.totalSize).toBeGreaterThan(0);\n  });\n});\n\ndescribe('整合測試', () => {\n  test('StorageAdapter 應該在 IndexedDB 失敗時回退到 LocalStorage', async () => {\n    // Mock IndexedDB 失敗\n    const originalIndexedDB = global.indexedDB;\n    global.indexedDB = undefined;\n    \n    const adapter = new StorageAdapter({\n      preferredStorage: 'indexeddb',\n      debug: true\n    });\n    \n    await adapter.init();\n    \n    // 確認使用 LocalStorage\n    const info = adapter.getAdapterInfo();\n    expect(info.primary).toBe('LocalStorageAdapter');\n    \n    // 測試基本功能\n    await adapter.setItem('fallback-test', 'works');\n    const result = await adapter.getItem('fallback-test');\n    expect(result).toBe('works');\n    \n    // 還原\n    global.indexedDB = originalIndexedDB;\n  });\n});\n"],"mappings":"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","ignoreList":[]}