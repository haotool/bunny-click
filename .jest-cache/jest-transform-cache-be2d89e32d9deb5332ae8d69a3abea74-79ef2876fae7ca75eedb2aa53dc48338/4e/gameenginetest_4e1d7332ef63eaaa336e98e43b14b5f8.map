{"version":3,"names":["global","performance","now","jest","fn","Date","window","addEventListener","removeEventListener","document","getElementById","id","textContent","style","describe","tpsCalculator","beforeEach","TPSCalculator","constructor","windowSize","clickBuffer","updateInterval","addClick","timestamp","push","cleanOldClicks","currentTime","filter","time","calculateTPS","length","getCurrentTPS","getAverageTPS","timeSpan","Math","max","getPeakTPS","peak","bufferCopy","i","windowStart","windowEnd","clicksInWindow","getStatistics","current","average","total","duration","reset","setWindowSize","size","test","expect","toBe","baseTime","avgTPS","toBeCloseTo","peakTPS","toBeGreaterThanOrEqual","stats","toHaveProperty","inputManager","mockGameEngine","handleClick","handleMultiTouch","getState","mode","InputManager","gameEngine","touchPoints","Map","debounceDelay","lastClickTime","hapticEnabled","handleTouchStart","event","touches","Array","from","forEach","touch","index","touchData","x","clientX","y","clientY","playerId","determinePlayers","set","identifier","handleTouchEnd","changedTouches","delete","handleMouseClick","clickData","type","screenWidth","setDebounceDelay","delay","enableHapticFeedback","enabled","getActiveTouches","mockTouchEvent","toHaveBeenCalledWith","objectContaining","any","Number","toHaveBeenCalledTimes","startEvent","endEvent","mockMouseEvent","leftX","rightX","mockEvent","mockTPSCalculator","mockInputManager","mockAudioManager","playClickSound","playSuccessSound","setEnabled","GameEngine","state","gameType","remainingTime","players","score","tps","active","audioManager","gameTimer","startGame","player","setTimeout","endGame","setInterval","updateGame","pauseGame","clearTimers","resumeGame","startTimers","getTotalScore","averageTPS","map","p","clickEvent","find","currentTPS","setState","newState","getTPS","getScore","reduce","clearTimeout","clearInterval","afterEach","toHaveLength","toHaveBeenCalled","result","not","setupEventListeners","touchEvent"],"sources":["game-engine.test.js"],"sourcesContent":["/**\n * 遊戲引擎測試\n * 測試 GameEngine、TPSCalculator、InputManager 等核心功能\n *\n * @author haotool\n * @version 7.2.3\n * @created 2025-08-18T02:39:58+08:00\n */\n\n// Mock DOM 環境\nglobal.performance = {\n  now: jest.fn(() => Date.now()),\n};\n\nglobal.window = {\n  performance: global.performance,\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n};\n\nglobal.document = {\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n  getElementById: jest.fn(id => ({\n    textContent: '',\n    style: {},\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n  })),\n};\n\ndescribe('TPSCalculator', () => {\n  let tpsCalculator;\n\n  beforeEach(() => {\n    // 模擬 TPSCalculator 類別\n    class TPSCalculator {\n      constructor(windowSize = 1000) {\n        this.windowSize = windowSize;\n        this.clickBuffer = [];\n        this.updateInterval = 100;\n      }\n\n      addClick(timestamp = performance.now()) {\n        this.clickBuffer.push(timestamp);\n        this.cleanOldClicks(timestamp);\n      }\n\n      cleanOldClicks(currentTime) {\n        this.clickBuffer = this.clickBuffer.filter(time => currentTime - time <= this.windowSize);\n      }\n\n      calculateTPS() {\n        return this.clickBuffer.length;\n      }\n\n      getCurrentTPS() {\n        return this.calculateTPS();\n      }\n\n      getAverageTPS() {\n        if (this.clickBuffer.length === 0) return 0;\n        const timeSpan = Math.max(\n          this.clickBuffer[this.clickBuffer.length - 1] - this.clickBuffer[0],\n          this.windowSize\n        );\n        return (this.clickBuffer.length * 1000) / timeSpan;\n      }\n\n      getPeakTPS() {\n        let peak = 0;\n        const bufferCopy = [...this.clickBuffer];\n\n        for (let i = 0; i < bufferCopy.length; i++) {\n          const windowStart = bufferCopy[i];\n          const windowEnd = windowStart + this.windowSize;\n          const clicksInWindow = bufferCopy.filter(\n            time => time >= windowStart && time <= windowEnd\n          ).length;\n          peak = Math.max(peak, clicksInWindow);\n        }\n\n        return peak;\n      }\n\n      getStatistics() {\n        return {\n          current: this.getCurrentTPS(),\n          average: this.getAverageTPS(),\n          peak: this.getPeakTPS(),\n          total: this.clickBuffer.length,\n          duration:\n            this.clickBuffer.length > 0\n              ? this.clickBuffer[this.clickBuffer.length - 1] - this.clickBuffer[0]\n              : 0,\n        };\n      }\n\n      reset() {\n        this.clickBuffer = [];\n      }\n\n      setWindowSize(size) {\n        this.windowSize = size;\n      }\n    }\n\n    tpsCalculator = new TPSCalculator();\n  });\n\n  describe('基本功能', () => {\n    test('應該能正確添加點擊', () => {\n      expect(tpsCalculator.getCurrentTPS()).toBe(0);\n\n      tpsCalculator.addClick(1000);\n      expect(tpsCalculator.getCurrentTPS()).toBe(1);\n\n      tpsCalculator.addClick(1100);\n      expect(tpsCalculator.getCurrentTPS()).toBe(2);\n    });\n\n    test('應該能計算當前 TPS', () => {\n      const baseTime = 1000;\n\n      // 在 1 秒內添加 10 次點擊\n      for (let i = 0; i < 10; i++) {\n        tpsCalculator.addClick(baseTime + i * 100);\n      }\n\n      expect(tpsCalculator.getCurrentTPS()).toBe(10);\n    });\n\n    test('應該能清理過期點擊', () => {\n      const baseTime = 1000;\n\n      // 添加舊點擊\n      tpsCalculator.addClick(baseTime);\n      tpsCalculator.addClick(baseTime + 100);\n\n      // 添加新點擊，應該清理舊的\n      tpsCalculator.addClick(baseTime + 1500); // 超過 1000ms 窗口\n\n      expect(tpsCalculator.getCurrentTPS()).toBe(1);\n    });\n\n    test('應該能重置計算器', () => {\n      tpsCalculator.addClick(1000);\n      tpsCalculator.addClick(1100);\n      expect(tpsCalculator.getCurrentTPS()).toBe(2);\n\n      tpsCalculator.reset();\n      expect(tpsCalculator.getCurrentTPS()).toBe(0);\n    });\n  });\n\n  describe('統計功能', () => {\n    test('應該能計算平均 TPS', () => {\n      const baseTime = 1000;\n\n      // 在 2 秒內均勻添加 20 次點擊\n      for (let i = 0; i < 20; i++) {\n        tpsCalculator.addClick(baseTime + i * 100);\n      }\n\n      const avgTPS = tpsCalculator.getAverageTPS();\n      // 實際時間範圍是 1900ms (0-1900)，TPS = 20 * 1000 / 1900 ≈ 10.53\n      expect(avgTPS).toBeCloseTo(10.53, 1); // 約 10.53 TPS\n    });\n\n    test('應該能計算峰值 TPS', () => {\n      const baseTime = 1000;\n\n      // 前 500ms 內快速點擊 10 次\n      for (let i = 0; i < 10; i++) {\n        tpsCalculator.addClick(baseTime + i * 50);\n      }\n\n      // 後 500ms 內慢速點擊 5 次\n      for (let i = 0; i < 5; i++) {\n        tpsCalculator.addClick(baseTime + 500 + i * 100);\n      }\n\n      const peakTPS = tpsCalculator.getPeakTPS();\n      expect(peakTPS).toBeGreaterThanOrEqual(10);\n    });\n\n    test('應該能獲取完整統計', () => {\n      tpsCalculator.addClick(1000);\n      tpsCalculator.addClick(1100);\n      tpsCalculator.addClick(1200);\n\n      const stats = tpsCalculator.getStatistics();\n\n      expect(stats).toHaveProperty('current');\n      expect(stats).toHaveProperty('average');\n      expect(stats).toHaveProperty('peak');\n      expect(stats).toHaveProperty('total');\n      expect(stats).toHaveProperty('duration');\n\n      expect(stats.current).toBe(3);\n      expect(stats.total).toBe(3);\n      expect(stats.duration).toBe(200);\n    });\n  });\n\n  describe('配置功能', () => {\n    test('應該能設定窗口大小', () => {\n      tpsCalculator.setWindowSize(500); // 設定為 500ms\n\n      tpsCalculator.addClick(1000);\n      tpsCalculator.addClick(1200);\n      tpsCalculator.addClick(1600); // 超過 500ms 窗口\n\n      // 窗口 [1100, 1600] 包含 1200 和 1600，共 2 個點擊\n      expect(tpsCalculator.getCurrentTPS()).toBe(2);\n    });\n  });\n});\n\ndescribe('InputManager', () => {\n  let inputManager;\n  let mockGameEngine;\n\n  beforeEach(() => {\n    // Mock GameEngine\n    mockGameEngine = {\n      handleClick: jest.fn(),\n      handleMultiTouch: jest.fn(),\n      getState: jest.fn(() => ({ mode: 'playing' })),\n    };\n\n    // 模擬 InputManager 類別\n    class InputManager {\n      constructor(gameEngine) {\n        this.gameEngine = gameEngine;\n        this.touchPoints = new Map();\n        this.debounceDelay = 16;\n        this.lastClickTime = 0;\n        this.hapticEnabled = true;\n      }\n\n      handleTouchStart(event) {\n        const touches = Array.from(event.touches || [event]);\n\n        touches.forEach((touch, index) => {\n          const touchData = {\n            x: touch.clientX || touch.x || 0,\n            y: touch.clientY || touch.y || 0,\n            timestamp: performance.now(),\n            playerId: this.determinePlayers(touch.clientX || touch.x || 0),\n          };\n\n          this.touchPoints.set(touch.identifier || index, touchData);\n\n          // 多指點擊遊戲：每個觸點都應該觸發點擊事件\n          this.gameEngine.handleClick(touchData);\n        });\n      }\n\n      handleTouchEnd(event) {\n        const touches = Array.from(event.changedTouches || [event]);\n\n        touches.forEach((touch, index) => {\n          this.touchPoints.delete(touch.identifier || index);\n        });\n      }\n\n      handleMouseClick(event) {\n        const clickData = {\n          x: event.clientX || 0,\n          y: event.clientY || 0,\n          timestamp: performance.now(),\n          playerId: this.determinePlayers(event.clientX || 0),\n          type: 'mouse',\n        };\n\n        const now = performance.now();\n        if (now - this.lastClickTime > this.debounceDelay) {\n          this.gameEngine.handleClick(clickData);\n          this.lastClickTime = now;\n        }\n      }\n\n      determinePlayers(x) {\n        // 簡單的左右分割邏輯\n        const screenWidth = 800; // 假設螢幕寬度\n        return x < screenWidth / 2 ? 1 : 2;\n      }\n\n      setDebounceDelay(delay) {\n        this.debounceDelay = delay;\n      }\n\n      enableHapticFeedback(enabled) {\n        this.hapticEnabled = enabled;\n      }\n\n      getActiveTouches() {\n        return this.touchPoints.size;\n      }\n    }\n\n    inputManager = new InputManager(mockGameEngine);\n  });\n\n  describe('觸控事件處理', () => {\n    test('應該能處理單點觸控', () => {\n      const mockTouchEvent = {\n        touches: [\n          {\n            identifier: 0,\n            clientX: 100,\n            clientY: 200,\n          },\n        ],\n      };\n\n      inputManager.handleTouchStart(mockTouchEvent);\n\n      expect(mockGameEngine.handleClick).toHaveBeenCalledWith(\n        expect.objectContaining({\n          x: 100,\n          y: 200,\n          playerId: 1, // 左側\n          timestamp: expect.any(Number),\n        })\n      );\n    });\n\n    test('應該能處理多點觸控', () => {\n      const mockTouchEvent = {\n        touches: [\n          { identifier: 0, clientX: 100, clientY: 200 },\n          { identifier: 1, clientX: 600, clientY: 300 },\n        ],\n      };\n\n      inputManager.handleTouchStart(mockTouchEvent);\n\n      expect(mockGameEngine.handleClick).toHaveBeenCalledTimes(2);\n      expect(inputManager.getActiveTouches()).toBe(2);\n    });\n\n    test('應該能處理觸控結束', () => {\n      // 先開始觸控\n      const startEvent = {\n        touches: [{ identifier: 0, clientX: 100, clientY: 200 }],\n      };\n      inputManager.handleTouchStart(startEvent);\n      expect(inputManager.getActiveTouches()).toBe(1);\n\n      // 結束觸控\n      const endEvent = {\n        changedTouches: [{ identifier: 0 }],\n      };\n      inputManager.handleTouchEnd(endEvent);\n      expect(inputManager.getActiveTouches()).toBe(0);\n    });\n  });\n\n  describe('滑鼠事件處理', () => {\n    test('應該能處理滑鼠點擊', () => {\n      const mockMouseEvent = {\n        clientX: 300,\n        clientY: 400,\n      };\n\n      inputManager.handleMouseClick(mockMouseEvent);\n\n      expect(mockGameEngine.handleClick).toHaveBeenCalledWith(\n        expect.objectContaining({\n          x: 300,\n          y: 400,\n          playerId: 1,\n          type: 'mouse',\n          timestamp: expect.any(Number),\n        })\n      );\n    });\n  });\n\n  describe('玩家判定', () => {\n    test('應該正確判定左側玩家', () => {\n      const leftX = 200;\n      const playerId = inputManager.determinePlayers(leftX);\n      expect(playerId).toBe(1);\n    });\n\n    test('應該正確判定右側玩家', () => {\n      const rightX = 600;\n      const playerId = inputManager.determinePlayers(rightX);\n      expect(playerId).toBe(2);\n    });\n  });\n\n  describe('防抖動機制', () => {\n    test('應該防止快速重複點擊', () => {\n      const mockEvent = {\n        touches: [{ identifier: 0, clientX: 100, clientY: 200 }],\n      };\n\n      // 快速連續點擊\n      inputManager.handleTouchStart(mockEvent);\n      inputManager.handleTouchStart(mockEvent);\n      inputManager.handleTouchStart(mockEvent);\n\n      // 應該只處理一次（防抖動）\n      expect(mockGameEngine.handleClick).toHaveBeenCalledTimes(1);\n    });\n\n    test('應該允許設定防抖動延遲', () => {\n      inputManager.setDebounceDelay(50);\n      expect(inputManager.debounceDelay).toBe(50);\n    });\n  });\n\n  describe('配置功能', () => {\n    test('應該能啟用/停用震動回饋', () => {\n      inputManager.enableHapticFeedback(false);\n      expect(inputManager.hapticEnabled).toBe(false);\n\n      inputManager.enableHapticFeedback(true);\n      expect(inputManager.hapticEnabled).toBe(true);\n    });\n  });\n});\n\ndescribe('GameEngine', () => {\n  let gameEngine;\n  let mockTPSCalculator;\n  let mockInputManager;\n  let mockAudioManager;\n\n  beforeEach(() => {\n    // Mock TPS Calculator\n    mockTPSCalculator = {\n      addClick: jest.fn(),\n      getCurrentTPS: jest.fn(() => 15),\n      getStatistics: jest.fn(() => ({\n        current: 15,\n        average: 12,\n        peak: 20,\n        total: 150,\n      })),\n      reset: jest.fn(),\n    };\n\n    // Mock Audio Manager\n    mockAudioManager = {\n      playClickSound: jest.fn(),\n      playSuccessSound: jest.fn(),\n      setEnabled: jest.fn(),\n    };\n\n    // 模擬 GameEngine 類別\n    class GameEngine {\n      constructor() {\n        this.state = {\n          mode: 'idle',\n          gameType: 'single',\n          duration: 30000,\n          remainingTime: 0,\n          players: [\n            { id: 1, score: 0, tps: 0, active: false },\n            { id: 2, score: 0, tps: 0, active: false },\n          ],\n        };\n        this.tpsCalculator = mockTPSCalculator;\n        this.audioManager = mockAudioManager;\n        this.gameTimer = null;\n        this.updateInterval = null;\n      }\n\n      startGame(mode, duration) {\n        this.state.mode = 'playing';\n        this.state.gameType = mode;\n        this.state.duration = duration;\n        this.state.remainingTime = duration;\n\n        // 重置統計\n        this.tpsCalculator.reset();\n        this.state.players.forEach(player => {\n          player.score = 0;\n          player.tps = 0;\n          player.active = true;\n        });\n\n        // 開始計時器\n        this.gameTimer = setTimeout(() => {\n          this.endGame();\n        }, duration);\n\n        // 開始更新循環\n        this.updateInterval = setInterval(() => {\n          this.updateGame();\n        }, 100);\n      }\n\n      pauseGame() {\n        if (this.state.mode === 'playing') {\n          this.state.mode = 'paused';\n          this.clearTimers();\n        }\n      }\n\n      resumeGame() {\n        if (this.state.mode === 'paused') {\n          this.state.mode = 'playing';\n          this.startTimers();\n        }\n      }\n\n      endGame() {\n        this.state.mode = 'ended';\n        this.clearTimers();\n\n        const stats = this.tpsCalculator.getStatistics();\n\n        return {\n          mode: this.state.gameType,\n          duration: this.state.duration,\n          score: this.getTotalScore(),\n          peakTPS: stats.peak,\n          averageTPS: stats.average,\n          players: this.state.players.map(p => ({ ...p })),\n        };\n      }\n\n      handleClick(clickEvent) {\n        if (this.state.mode !== 'playing') return;\n\n        const player = this.state.players.find(p => p.id === clickEvent.playerId);\n        if (player && player.active) {\n          player.score++;\n          this.tpsCalculator.addClick(clickEvent.timestamp);\n          this.audioManager.playClickSound();\n        }\n      }\n\n      updateGame() {\n        if (this.state.mode === 'playing') {\n          this.state.remainingTime = Math.max(0, this.state.remainingTime - 100);\n\n          // 更新 TPS\n          const currentTPS = this.tpsCalculator.getCurrentTPS();\n          this.state.players.forEach(player => {\n            if (player.active) {\n              player.tps = currentTPS;\n            }\n          });\n\n          if (this.state.remainingTime <= 0) {\n            this.endGame();\n          }\n        }\n      }\n\n      getState() {\n        return { ...this.state };\n      }\n\n      setState(newState) {\n        this.state = { ...this.state, ...newState };\n      }\n\n      getTPS() {\n        return this.tpsCalculator.getCurrentTPS();\n      }\n\n      getScore() {\n        return this.getTotalScore();\n      }\n\n      getTotalScore() {\n        return this.state.players.reduce((total, player) => total + player.score, 0);\n      }\n\n      clearTimers() {\n        if (this.gameTimer) {\n          clearTimeout(this.gameTimer);\n          this.gameTimer = null;\n        }\n        if (this.updateInterval) {\n          clearInterval(this.updateInterval);\n          this.updateInterval = null;\n        }\n      }\n\n      startTimers() {\n        // 重新開始計時器（簡化實作）\n        this.gameTimer = setTimeout(() => {\n          this.endGame();\n        }, this.state.remainingTime);\n      }\n    }\n\n    gameEngine = new GameEngine();\n  });\n\n  afterEach(() => {\n    gameEngine.clearTimers();\n  });\n\n  describe('遊戲狀態管理', () => {\n    test('應該正確初始化遊戲狀態', () => {\n      const state = gameEngine.getState();\n\n      expect(state.mode).toBe('idle');\n      expect(state.players).toHaveLength(2);\n      expect(state.players[0].score).toBe(0);\n      expect(state.players[1].score).toBe(0);\n    });\n\n    test('應該能開始遊戲', () => {\n      gameEngine.startGame('single', 30000);\n\n      const state = gameEngine.getState();\n      expect(state.mode).toBe('playing');\n      expect(state.gameType).toBe('single');\n      expect(state.duration).toBe(30000);\n      expect(state.remainingTime).toBe(30000);\n      expect(mockTPSCalculator.reset).toHaveBeenCalled();\n    });\n\n    test('應該能暫停遊戲', () => {\n      gameEngine.startGame('single', 30000);\n      gameEngine.pauseGame();\n\n      const state = gameEngine.getState();\n      expect(state.mode).toBe('paused');\n    });\n\n    test('應該能恢復遊戲', () => {\n      gameEngine.startGame('single', 30000);\n      gameEngine.pauseGame();\n      gameEngine.resumeGame();\n\n      const state = gameEngine.getState();\n      expect(state.mode).toBe('playing');\n    });\n\n    test('應該能結束遊戲並返回結果', () => {\n      gameEngine.startGame('single', 30000);\n\n      // 模擬一些點擊\n      gameEngine.handleClick({ playerId: 1, timestamp: 1000 });\n      gameEngine.handleClick({ playerId: 1, timestamp: 1100 });\n\n      const result = gameEngine.endGame();\n\n      expect(result).toHaveProperty('mode');\n      expect(result).toHaveProperty('duration');\n      expect(result).toHaveProperty('score');\n      expect(result).toHaveProperty('peakTPS');\n      expect(result).toHaveProperty('averageTPS');\n      expect(result.mode).toBe('single');\n      expect(result.duration).toBe(30000);\n    });\n  });\n\n  describe('點擊處理', () => {\n    test('應該正確處理玩家點擊', () => {\n      gameEngine.startGame('single', 30000);\n\n      const clickEvent = {\n        playerId: 1,\n        x: 100,\n        y: 200,\n        timestamp: 1000,\n      };\n\n      gameEngine.handleClick(clickEvent);\n\n      const state = gameEngine.getState();\n      expect(state.players[0].score).toBe(1);\n      expect(mockTPSCalculator.addClick).toHaveBeenCalledWith(1000);\n      expect(mockAudioManager.playClickSound).toHaveBeenCalled();\n    });\n\n    test('非遊戲狀態下不應處理點擊', () => {\n      const clickEvent = { playerId: 1, timestamp: 1000 };\n\n      gameEngine.handleClick(clickEvent);\n\n      const state = gameEngine.getState();\n      expect(state.players[0].score).toBe(0);\n      expect(mockTPSCalculator.addClick).not.toHaveBeenCalled();\n    });\n\n    test('應該正確計算總分', () => {\n      gameEngine.startGame('dual', 30000);\n\n      // 玩家 1 點擊 3 次\n      for (let i = 0; i < 3; i++) {\n        gameEngine.handleClick({ playerId: 1, timestamp: 1000 + i * 100 });\n      }\n\n      // 玩家 2 點擊 2 次\n      for (let i = 0; i < 2; i++) {\n        gameEngine.handleClick({ playerId: 2, timestamp: 2000 + i * 100 });\n      }\n\n      expect(gameEngine.getTotalScore()).toBe(5);\n    });\n  });\n\n  describe('統計功能', () => {\n    test('應該能獲取當前 TPS', () => {\n      const tps = gameEngine.getTPS();\n      expect(tps).toBe(15);\n      expect(mockTPSCalculator.getCurrentTPS).toHaveBeenCalled();\n    });\n\n    test('應該能獲取當前分數', () => {\n      gameEngine.startGame('single', 30000);\n      gameEngine.handleClick({ playerId: 1, timestamp: 1000 });\n      gameEngine.handleClick({ playerId: 1, timestamp: 1100 });\n\n      const score = gameEngine.getScore();\n      expect(score).toBe(2);\n    });\n  });\n});\n\ndescribe('整合測試', () => {\n  test('完整遊戲流程測試', () => {\n    // 這個測試模擬一個完整的遊戲流程\n    const mockGameEngine = {\n      state: { mode: 'idle' },\n      startGame: jest.fn(),\n      handleClick: jest.fn(),\n      endGame: jest.fn(),\n      getState: jest.fn(() => ({ mode: 'playing' })),\n    };\n\n    const mockInputManager = {\n      setupEventListeners: jest.fn(),\n      handleTouchStart: jest.fn(),\n      setDebounceDelay: jest.fn(),\n    };\n\n    // 1. 初始化\n    expect(mockGameEngine.state.mode).toBe('idle');\n\n    // 2. 開始遊戲\n    mockGameEngine.startGame('single', 30000);\n    expect(mockGameEngine.startGame).toHaveBeenCalledWith('single', 30000);\n\n    // 3. 處理輸入\n    const touchEvent = {\n      touches: [{ identifier: 0, clientX: 100, clientY: 200 }],\n    };\n    mockInputManager.handleTouchStart(touchEvent);\n    expect(mockInputManager.handleTouchStart).toHaveBeenCalledWith(touchEvent);\n\n    // 4. 結束遊戲\n    mockGameEngine.endGame();\n    expect(mockGameEngine.endGame).toHaveBeenCalled();\n  });\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA,MAAM,CAACC,WAAW,GAAG;EACnBC,GAAG,EAAEC,IAAI,CAACC,EAAE,CAAC,MAAMC,IAAI,CAACH,GAAG,CAAC,CAAC;AAC/B,CAAC;AAEDF,MAAM,CAACM,MAAM,GAAG;EACdL,WAAW,EAAED,MAAM,CAACC,WAAW;EAC/BM,gBAAgB,EAAEJ,IAAI,CAACC,EAAE,CAAC,CAAC;EAC3BI,mBAAmB,EAAEL,IAAI,CAACC,EAAE,CAAC;AAC/B,CAAC;AAEDJ,MAAM,CAACS,QAAQ,GAAG;EAChBF,gBAAgB,EAAEJ,IAAI,CAACC,EAAE,CAAC,CAAC;EAC3BI,mBAAmB,EAAEL,IAAI,CAACC,EAAE,CAAC,CAAC;EAC9BM,cAAc,EAAEP,IAAI,CAACC,EAAE,CAACO,EAAE,KAAK;IAC7BC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,CAAC,CAAC;IACTN,gBAAgB,EAAEJ,IAAI,CAACC,EAAE,CAAC,CAAC;IAC3BI,mBAAmB,EAAEL,IAAI,CAACC,EAAE,CAAC;EAC/B,CAAC,CAAC;AACJ,CAAC;AAEDU,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC9B,IAAIC,aAAa;EAEjBC,UAAU,CAAC,MAAM;IACf;IACA,MAAMC,aAAa,CAAC;MAClBC,WAAWA,CAACC,UAAU,GAAG,IAAI,EAAE;QAC7B,IAAI,CAACA,UAAU,GAAGA,UAAU;QAC5B,IAAI,CAACC,WAAW,GAAG,EAAE;QACrB,IAAI,CAACC,cAAc,GAAG,GAAG;MAC3B;MAEAC,QAAQA,CAACC,SAAS,GAAGtB,WAAW,CAACC,GAAG,CAAC,CAAC,EAAE;QACtC,IAAI,CAACkB,WAAW,CAACI,IAAI,CAACD,SAAS,CAAC;QAChC,IAAI,CAACE,cAAc,CAACF,SAAS,CAAC;MAChC;MAEAE,cAAcA,CAACC,WAAW,EAAE;QAC1B,IAAI,CAACN,WAAW,GAAG,IAAI,CAACA,WAAW,CAACO,MAAM,CAACC,IAAI,IAAIF,WAAW,GAAGE,IAAI,IAAI,IAAI,CAACT,UAAU,CAAC;MAC3F;MAEAU,YAAYA,CAAA,EAAG;QACb,OAAO,IAAI,CAACT,WAAW,CAACU,MAAM;MAChC;MAEAC,aAAaA,CAAA,EAAG;QACd,OAAO,IAAI,CAACF,YAAY,CAAC,CAAC;MAC5B;MAEAG,aAAaA,CAAA,EAAG;QACd,IAAI,IAAI,CAACZ,WAAW,CAACU,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;QAC3C,MAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAG,CACvB,IAAI,CAACf,WAAW,CAAC,IAAI,CAACA,WAAW,CAACU,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAACV,WAAW,CAAC,CAAC,CAAC,EACnE,IAAI,CAACD,UACP,CAAC;QACD,OAAQ,IAAI,CAACC,WAAW,CAACU,MAAM,GAAG,IAAI,GAAIG,QAAQ;MACpD;MAEAG,UAAUA,CAAA,EAAG;QACX,IAAIC,IAAI,GAAG,CAAC;QACZ,MAAMC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAClB,WAAW,CAAC;QAExC,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,CAACR,MAAM,EAAES,CAAC,EAAE,EAAE;UAC1C,MAAMC,WAAW,GAAGF,UAAU,CAACC,CAAC,CAAC;UACjC,MAAME,SAAS,GAAGD,WAAW,GAAG,IAAI,CAACrB,UAAU;UAC/C,MAAMuB,cAAc,GAAGJ,UAAU,CAACX,MAAM,CACtCC,IAAI,IAAIA,IAAI,IAAIY,WAAW,IAAIZ,IAAI,IAAIa,SACzC,CAAC,CAACX,MAAM;UACRO,IAAI,GAAGH,IAAI,CAACC,GAAG,CAACE,IAAI,EAAEK,cAAc,CAAC;QACvC;QAEA,OAAOL,IAAI;MACb;MAEAM,aAAaA,CAAA,EAAG;QACd,OAAO;UACLC,OAAO,EAAE,IAAI,CAACb,aAAa,CAAC,CAAC;UAC7Bc,OAAO,EAAE,IAAI,CAACb,aAAa,CAAC,CAAC;UAC7BK,IAAI,EAAE,IAAI,CAACD,UAAU,CAAC,CAAC;UACvBU,KAAK,EAAE,IAAI,CAAC1B,WAAW,CAACU,MAAM;UAC9BiB,QAAQ,EACN,IAAI,CAAC3B,WAAW,CAACU,MAAM,GAAG,CAAC,GACvB,IAAI,CAACV,WAAW,CAAC,IAAI,CAACA,WAAW,CAACU,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAACV,WAAW,CAAC,CAAC,CAAC,GACnE;QACR,CAAC;MACH;MAEA4B,KAAKA,CAAA,EAAG;QACN,IAAI,CAAC5B,WAAW,GAAG,EAAE;MACvB;MAEA6B,aAAaA,CAACC,IAAI,EAAE;QAClB,IAAI,CAAC/B,UAAU,GAAG+B,IAAI;MACxB;IACF;IAEAnC,aAAa,GAAG,IAAIE,aAAa,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFH,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,WAAW,EAAE,MAAM;MACtBC,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;MAE7CtC,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5B8B,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;MAE7CtC,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5B8B,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEFF,IAAI,CAAC,aAAa,EAAE,MAAM;MACxB,MAAMG,QAAQ,GAAG,IAAI;;MAErB;MACA,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3BxB,aAAa,CAACO,QAAQ,CAACgC,QAAQ,GAAGf,CAAC,GAAG,GAAG,CAAC;MAC5C;MAEAa,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,EAAE,CAAC;IAChD,CAAC,CAAC;IAEFF,IAAI,CAAC,WAAW,EAAE,MAAM;MACtB,MAAMG,QAAQ,GAAG,IAAI;;MAErB;MACAvC,aAAa,CAACO,QAAQ,CAACgC,QAAQ,CAAC;MAChCvC,aAAa,CAACO,QAAQ,CAACgC,QAAQ,GAAG,GAAG,CAAC;;MAEtC;MACAvC,aAAa,CAACO,QAAQ,CAACgC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;;MAEzCF,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEFF,IAAI,CAAC,UAAU,EAAE,MAAM;MACrBpC,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5BP,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5B8B,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;MAE7CtC,aAAa,CAACiC,KAAK,CAAC,CAAC;MACrBI,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,aAAa,EAAE,MAAM;MACxB,MAAMG,QAAQ,GAAG,IAAI;;MAErB;MACA,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3BxB,aAAa,CAACO,QAAQ,CAACgC,QAAQ,GAAGf,CAAC,GAAG,GAAG,CAAC;MAC5C;MAEA,MAAMgB,MAAM,GAAGxC,aAAa,CAACiB,aAAa,CAAC,CAAC;MAC5C;MACAoB,MAAM,CAACG,MAAM,CAAC,CAACC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;IAEFL,IAAI,CAAC,aAAa,EAAE,MAAM;MACxB,MAAMG,QAAQ,GAAG,IAAI;;MAErB;MACA,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3BxB,aAAa,CAACO,QAAQ,CAACgC,QAAQ,GAAGf,CAAC,GAAG,EAAE,CAAC;MAC3C;;MAEA;MACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1BxB,aAAa,CAACO,QAAQ,CAACgC,QAAQ,GAAG,GAAG,GAAGf,CAAC,GAAG,GAAG,CAAC;MAClD;MAEA,MAAMkB,OAAO,GAAG1C,aAAa,CAACqB,UAAU,CAAC,CAAC;MAC1CgB,MAAM,CAACK,OAAO,CAAC,CAACC,sBAAsB,CAAC,EAAE,CAAC;IAC5C,CAAC,CAAC;IAEFP,IAAI,CAAC,WAAW,EAAE,MAAM;MACtBpC,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5BP,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5BP,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAE5B,MAAMqC,KAAK,GAAG5C,aAAa,CAAC4B,aAAa,CAAC,CAAC;MAE3CS,MAAM,CAACO,KAAK,CAAC,CAACC,cAAc,CAAC,SAAS,CAAC;MACvCR,MAAM,CAACO,KAAK,CAAC,CAACC,cAAc,CAAC,SAAS,CAAC;MACvCR,MAAM,CAACO,KAAK,CAAC,CAACC,cAAc,CAAC,MAAM,CAAC;MACpCR,MAAM,CAACO,KAAK,CAAC,CAACC,cAAc,CAAC,OAAO,CAAC;MACrCR,MAAM,CAACO,KAAK,CAAC,CAACC,cAAc,CAAC,UAAU,CAAC;MAExCR,MAAM,CAACO,KAAK,CAACf,OAAO,CAAC,CAACS,IAAI,CAAC,CAAC,CAAC;MAC7BD,MAAM,CAACO,KAAK,CAACb,KAAK,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC;MAC3BD,MAAM,CAACO,KAAK,CAACZ,QAAQ,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,WAAW,EAAE,MAAM;MACtBpC,aAAa,CAACkC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;;MAElClC,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5BP,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC5BP,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;MAE9B;MACA8B,MAAM,CAACrC,aAAa,CAACgB,aAAa,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFvC,QAAQ,CAAC,cAAc,EAAE,MAAM;EAC7B,IAAI+C,YAAY;EAChB,IAAIC,cAAc;EAElB9C,UAAU,CAAC,MAAM;IACf;IACA8C,cAAc,GAAG;MACfC,WAAW,EAAE5D,IAAI,CAACC,EAAE,CAAC,CAAC;MACtB4D,gBAAgB,EAAE7D,IAAI,CAACC,EAAE,CAAC,CAAC;MAC3B6D,QAAQ,EAAE9D,IAAI,CAACC,EAAE,CAAC,OAAO;QAAE8D,IAAI,EAAE;MAAU,CAAC,CAAC;IAC/C,CAAC;;IAED;IACA,MAAMC,YAAY,CAAC;MACjBjD,WAAWA,CAACkD,UAAU,EAAE;QACtB,IAAI,CAACA,UAAU,GAAGA,UAAU;QAC5B,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAACC,aAAa,GAAG,EAAE;QACvB,IAAI,CAACC,aAAa,GAAG,CAAC;QACtB,IAAI,CAACC,aAAa,GAAG,IAAI;MAC3B;MAEAC,gBAAgBA,CAACC,KAAK,EAAE;QACtB,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACC,OAAO,IAAI,CAACD,KAAK,CAAC,CAAC;QAEpDC,OAAO,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;UAChC,MAAMC,SAAS,GAAG;YAChBC,CAAC,EAAEH,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACG,CAAC,IAAI,CAAC;YAChCE,CAAC,EAAEL,KAAK,CAACM,OAAO,IAAIN,KAAK,CAACK,CAAC,IAAI,CAAC;YAChC9D,SAAS,EAAEtB,WAAW,CAACC,GAAG,CAAC,CAAC;YAC5BqF,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAACR,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACG,CAAC,IAAI,CAAC;UAC/D,CAAC;UAED,IAAI,CAACd,WAAW,CAACoB,GAAG,CAACT,KAAK,CAACU,UAAU,IAAIT,KAAK,EAAEC,SAAS,CAAC;;UAE1D;UACA,IAAI,CAACd,UAAU,CAACL,WAAW,CAACmB,SAAS,CAAC;QACxC,CAAC,CAAC;MACJ;MAEAS,cAAcA,CAAChB,KAAK,EAAE;QACpB,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACiB,cAAc,IAAI,CAACjB,KAAK,CAAC,CAAC;QAE3DC,OAAO,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;UAChC,IAAI,CAACZ,WAAW,CAACwB,MAAM,CAACb,KAAK,CAACU,UAAU,IAAIT,KAAK,CAAC;QACpD,CAAC,CAAC;MACJ;MAEAa,gBAAgBA,CAACnB,KAAK,EAAE;QACtB,MAAMoB,SAAS,GAAG;UAChBZ,CAAC,EAAER,KAAK,CAACS,OAAO,IAAI,CAAC;UACrBC,CAAC,EAAEV,KAAK,CAACW,OAAO,IAAI,CAAC;UACrB/D,SAAS,EAAEtB,WAAW,CAACC,GAAG,CAAC,CAAC;UAC5BqF,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAACb,KAAK,CAACS,OAAO,IAAI,CAAC,CAAC;UACnDY,IAAI,EAAE;QACR,CAAC;QAED,MAAM9F,GAAG,GAAGD,WAAW,CAACC,GAAG,CAAC,CAAC;QAC7B,IAAIA,GAAG,GAAG,IAAI,CAACsE,aAAa,GAAG,IAAI,CAACD,aAAa,EAAE;UACjD,IAAI,CAACH,UAAU,CAACL,WAAW,CAACgC,SAAS,CAAC;UACtC,IAAI,CAACvB,aAAa,GAAGtE,GAAG;QAC1B;MACF;MAEAsF,gBAAgBA,CAACL,CAAC,EAAE;QAClB;QACA,MAAMc,WAAW,GAAG,GAAG,CAAC,CAAC;QACzB,OAAOd,CAAC,GAAGc,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;MACpC;MAEAC,gBAAgBA,CAACC,KAAK,EAAE;QACtB,IAAI,CAAC5B,aAAa,GAAG4B,KAAK;MAC5B;MAEAC,oBAAoBA,CAACC,OAAO,EAAE;QAC5B,IAAI,CAAC5B,aAAa,GAAG4B,OAAO;MAC9B;MAEAC,gBAAgBA,CAAA,EAAG;QACjB,OAAO,IAAI,CAACjC,WAAW,CAACnB,IAAI;MAC9B;IACF;IAEAW,YAAY,GAAG,IAAIM,YAAY,CAACL,cAAc,CAAC;EACjD,CAAC,CAAC;EAEFhD,QAAQ,CAAC,QAAQ,EAAE,MAAM;IACvBqC,IAAI,CAAC,WAAW,EAAE,MAAM;MACtB,MAAMoD,cAAc,GAAG;QACrB3B,OAAO,EAAE,CACP;UACEc,UAAU,EAAE,CAAC;UACbN,OAAO,EAAE,GAAG;UACZE,OAAO,EAAE;QACX,CAAC;MAEL,CAAC;MAEDzB,YAAY,CAACa,gBAAgB,CAAC6B,cAAc,CAAC;MAE7CnD,MAAM,CAACU,cAAc,CAACC,WAAW,CAAC,CAACyC,oBAAoB,CACrDpD,MAAM,CAACqD,gBAAgB,CAAC;QACtBtB,CAAC,EAAE,GAAG;QACNE,CAAC,EAAE,GAAG;QACNE,QAAQ,EAAE,CAAC;QAAE;QACbhE,SAAS,EAAE6B,MAAM,CAACsD,GAAG,CAACC,MAAM;MAC9B,CAAC,CACH,CAAC;IACH,CAAC,CAAC;IAEFxD,IAAI,CAAC,WAAW,EAAE,MAAM;MACtB,MAAMoD,cAAc,GAAG;QACrB3B,OAAO,EAAE,CACP;UAAEc,UAAU,EAAE,CAAC;UAAEN,OAAO,EAAE,GAAG;UAAEE,OAAO,EAAE;QAAI,CAAC,EAC7C;UAAEI,UAAU,EAAE,CAAC;UAAEN,OAAO,EAAE,GAAG;UAAEE,OAAO,EAAE;QAAI,CAAC;MAEjD,CAAC;MAEDzB,YAAY,CAACa,gBAAgB,CAAC6B,cAAc,CAAC;MAE7CnD,MAAM,CAACU,cAAc,CAACC,WAAW,CAAC,CAAC6C,qBAAqB,CAAC,CAAC,CAAC;MAC3DxD,MAAM,CAACS,YAAY,CAACyC,gBAAgB,CAAC,CAAC,CAAC,CAACjD,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;IAEFF,IAAI,CAAC,WAAW,EAAE,MAAM;MACtB;MACA,MAAM0D,UAAU,GAAG;QACjBjC,OAAO,EAAE,CAAC;UAAEc,UAAU,EAAE,CAAC;UAAEN,OAAO,EAAE,GAAG;UAAEE,OAAO,EAAE;QAAI,CAAC;MACzD,CAAC;MACDzB,YAAY,CAACa,gBAAgB,CAACmC,UAAU,CAAC;MACzCzD,MAAM,CAACS,YAAY,CAACyC,gBAAgB,CAAC,CAAC,CAAC,CAACjD,IAAI,CAAC,CAAC,CAAC;;MAE/C;MACA,MAAMyD,QAAQ,GAAG;QACflB,cAAc,EAAE,CAAC;UAAEF,UAAU,EAAE;QAAE,CAAC;MACpC,CAAC;MACD7B,YAAY,CAAC8B,cAAc,CAACmB,QAAQ,CAAC;MACrC1D,MAAM,CAACS,YAAY,CAACyC,gBAAgB,CAAC,CAAC,CAAC,CAACjD,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,QAAQ,EAAE,MAAM;IACvBqC,IAAI,CAAC,WAAW,EAAE,MAAM;MACtB,MAAM4D,cAAc,GAAG;QACrB3B,OAAO,EAAE,GAAG;QACZE,OAAO,EAAE;MACX,CAAC;MAEDzB,YAAY,CAACiC,gBAAgB,CAACiB,cAAc,CAAC;MAE7C3D,MAAM,CAACU,cAAc,CAACC,WAAW,CAAC,CAACyC,oBAAoB,CACrDpD,MAAM,CAACqD,gBAAgB,CAAC;QACtBtB,CAAC,EAAE,GAAG;QACNE,CAAC,EAAE,GAAG;QACNE,QAAQ,EAAE,CAAC;QACXS,IAAI,EAAE,OAAO;QACbzE,SAAS,EAAE6B,MAAM,CAACsD,GAAG,CAACC,MAAM;MAC9B,CAAC,CACH,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF7F,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,YAAY,EAAE,MAAM;MACvB,MAAM6D,KAAK,GAAG,GAAG;MACjB,MAAMzB,QAAQ,GAAG1B,YAAY,CAAC2B,gBAAgB,CAACwB,KAAK,CAAC;MACrD5D,MAAM,CAACmC,QAAQ,CAAC,CAAClC,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEFF,IAAI,CAAC,YAAY,EAAE,MAAM;MACvB,MAAM8D,MAAM,GAAG,GAAG;MAClB,MAAM1B,QAAQ,GAAG1B,YAAY,CAAC2B,gBAAgB,CAACyB,MAAM,CAAC;MACtD7D,MAAM,CAACmC,QAAQ,CAAC,CAAClC,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,OAAO,EAAE,MAAM;IACtBqC,IAAI,CAAC,YAAY,EAAE,MAAM;MACvB,MAAM+D,SAAS,GAAG;QAChBtC,OAAO,EAAE,CAAC;UAAEc,UAAU,EAAE,CAAC;UAAEN,OAAO,EAAE,GAAG;UAAEE,OAAO,EAAE;QAAI,CAAC;MACzD,CAAC;;MAED;MACAzB,YAAY,CAACa,gBAAgB,CAACwC,SAAS,CAAC;MACxCrD,YAAY,CAACa,gBAAgB,CAACwC,SAAS,CAAC;MACxCrD,YAAY,CAACa,gBAAgB,CAACwC,SAAS,CAAC;;MAExC;MACA9D,MAAM,CAACU,cAAc,CAACC,WAAW,CAAC,CAAC6C,qBAAqB,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;IAEFzD,IAAI,CAAC,aAAa,EAAE,MAAM;MACxBU,YAAY,CAACqC,gBAAgB,CAAC,EAAE,CAAC;MACjC9C,MAAM,CAACS,YAAY,CAACU,aAAa,CAAC,CAAClB,IAAI,CAAC,EAAE,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,cAAc,EAAE,MAAM;MACzBU,YAAY,CAACuC,oBAAoB,CAAC,KAAK,CAAC;MACxChD,MAAM,CAACS,YAAY,CAACY,aAAa,CAAC,CAACpB,IAAI,CAAC,KAAK,CAAC;MAE9CQ,YAAY,CAACuC,oBAAoB,CAAC,IAAI,CAAC;MACvChD,MAAM,CAACS,YAAY,CAACY,aAAa,CAAC,CAACpB,IAAI,CAAC,IAAI,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFvC,QAAQ,CAAC,YAAY,EAAE,MAAM;EAC3B,IAAIsD,UAAU;EACd,IAAI+C,iBAAiB;EACrB,IAAIC,gBAAgB;EACpB,IAAIC,gBAAgB;EAEpBrG,UAAU,CAAC,MAAM;IACf;IACAmG,iBAAiB,GAAG;MAClB7F,QAAQ,EAAEnB,IAAI,CAACC,EAAE,CAAC,CAAC;MACnB2B,aAAa,EAAE5B,IAAI,CAACC,EAAE,CAAC,MAAM,EAAE,CAAC;MAChCuC,aAAa,EAAExC,IAAI,CAACC,EAAE,CAAC,OAAO;QAC5BwC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXR,IAAI,EAAE,EAAE;QACRS,KAAK,EAAE;MACT,CAAC,CAAC,CAAC;MACHE,KAAK,EAAE7C,IAAI,CAACC,EAAE,CAAC;IACjB,CAAC;;IAED;IACAiH,gBAAgB,GAAG;MACjBC,cAAc,EAAEnH,IAAI,CAACC,EAAE,CAAC,CAAC;MACzBmH,gBAAgB,EAAEpH,IAAI,CAACC,EAAE,CAAC,CAAC;MAC3BoH,UAAU,EAAErH,IAAI,CAACC,EAAE,CAAC;IACtB,CAAC;;IAED;IACA,MAAMqH,UAAU,CAAC;MACfvG,WAAWA,CAAA,EAAG;QACZ,IAAI,CAACwG,KAAK,GAAG;UACXxD,IAAI,EAAE,MAAM;UACZyD,QAAQ,EAAE,QAAQ;UAClB5E,QAAQ,EAAE,KAAK;UACf6E,aAAa,EAAE,CAAC;UAChBC,OAAO,EAAE,CACP;YAAElH,EAAE,EAAE,CAAC;YAAEmH,KAAK,EAAE,CAAC;YAAEC,GAAG,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAM,CAAC,EAC1C;YAAErH,EAAE,EAAE,CAAC;YAAEmH,KAAK,EAAE,CAAC;YAAEC,GAAG,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAM,CAAC;QAE9C,CAAC;QACD,IAAI,CAACjH,aAAa,GAAGoG,iBAAiB;QACtC,IAAI,CAACc,YAAY,GAAGZ,gBAAgB;QACpC,IAAI,CAACa,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC7G,cAAc,GAAG,IAAI;MAC5B;MAEA8G,SAASA,CAACjE,IAAI,EAAEnB,QAAQ,EAAE;QACxB,IAAI,CAAC2E,KAAK,CAACxD,IAAI,GAAG,SAAS;QAC3B,IAAI,CAACwD,KAAK,CAACC,QAAQ,GAAGzD,IAAI;QAC1B,IAAI,CAACwD,KAAK,CAAC3E,QAAQ,GAAGA,QAAQ;QAC9B,IAAI,CAAC2E,KAAK,CAACE,aAAa,GAAG7E,QAAQ;;QAEnC;QACA,IAAI,CAAChC,aAAa,CAACiC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC0E,KAAK,CAACG,OAAO,CAAC9C,OAAO,CAACqD,MAAM,IAAI;UACnCA,MAAM,CAACN,KAAK,GAAG,CAAC;UAChBM,MAAM,CAACL,GAAG,GAAG,CAAC;UACdK,MAAM,CAACJ,MAAM,GAAG,IAAI;QACtB,CAAC,CAAC;;QAEF;QACA,IAAI,CAACE,SAAS,GAAGG,UAAU,CAAC,MAAM;UAChC,IAAI,CAACC,OAAO,CAAC,CAAC;QAChB,CAAC,EAAEvF,QAAQ,CAAC;;QAEZ;QACA,IAAI,CAAC1B,cAAc,GAAGkH,WAAW,CAAC,MAAM;UACtC,IAAI,CAACC,UAAU,CAAC,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC;MACT;MAEAC,SAASA,CAAA,EAAG;QACV,IAAI,IAAI,CAACf,KAAK,CAACxD,IAAI,KAAK,SAAS,EAAE;UACjC,IAAI,CAACwD,KAAK,CAACxD,IAAI,GAAG,QAAQ;UAC1B,IAAI,CAACwE,WAAW,CAAC,CAAC;QACpB;MACF;MAEAC,UAAUA,CAAA,EAAG;QACX,IAAI,IAAI,CAACjB,KAAK,CAACxD,IAAI,KAAK,QAAQ,EAAE;UAChC,IAAI,CAACwD,KAAK,CAACxD,IAAI,GAAG,SAAS;UAC3B,IAAI,CAAC0E,WAAW,CAAC,CAAC;QACpB;MACF;MAEAN,OAAOA,CAAA,EAAG;QACR,IAAI,CAACZ,KAAK,CAACxD,IAAI,GAAG,OAAO;QACzB,IAAI,CAACwE,WAAW,CAAC,CAAC;QAElB,MAAM/E,KAAK,GAAG,IAAI,CAAC5C,aAAa,CAAC4B,aAAa,CAAC,CAAC;QAEhD,OAAO;UACLuB,IAAI,EAAE,IAAI,CAACwD,KAAK,CAACC,QAAQ;UACzB5E,QAAQ,EAAE,IAAI,CAAC2E,KAAK,CAAC3E,QAAQ;UAC7B+E,KAAK,EAAE,IAAI,CAACe,aAAa,CAAC,CAAC;UAC3BpF,OAAO,EAAEE,KAAK,CAACtB,IAAI;UACnByG,UAAU,EAAEnF,KAAK,CAACd,OAAO;UACzBgF,OAAO,EAAE,IAAI,CAACH,KAAK,CAACG,OAAO,CAACkB,GAAG,CAACC,CAAC,KAAK;YAAE,GAAGA;UAAE,CAAC,CAAC;QACjD,CAAC;MACH;MAEAjF,WAAWA,CAACkF,UAAU,EAAE;QACtB,IAAI,IAAI,CAACvB,KAAK,CAACxD,IAAI,KAAK,SAAS,EAAE;QAEnC,MAAMkE,MAAM,GAAG,IAAI,CAACV,KAAK,CAACG,OAAO,CAACqB,IAAI,CAACF,CAAC,IAAIA,CAAC,CAACrI,EAAE,KAAKsI,UAAU,CAAC1D,QAAQ,CAAC;QACzE,IAAI6C,MAAM,IAAIA,MAAM,CAACJ,MAAM,EAAE;UAC3BI,MAAM,CAACN,KAAK,EAAE;UACd,IAAI,CAAC/G,aAAa,CAACO,QAAQ,CAAC2H,UAAU,CAAC1H,SAAS,CAAC;UACjD,IAAI,CAAC0G,YAAY,CAACX,cAAc,CAAC,CAAC;QACpC;MACF;MAEAkB,UAAUA,CAAA,EAAG;QACX,IAAI,IAAI,CAACd,KAAK,CAACxD,IAAI,KAAK,SAAS,EAAE;UACjC,IAAI,CAACwD,KAAK,CAACE,aAAa,GAAG1F,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACuF,KAAK,CAACE,aAAa,GAAG,GAAG,CAAC;;UAEtE;UACA,MAAMuB,UAAU,GAAG,IAAI,CAACpI,aAAa,CAACgB,aAAa,CAAC,CAAC;UACrD,IAAI,CAAC2F,KAAK,CAACG,OAAO,CAAC9C,OAAO,CAACqD,MAAM,IAAI;YACnC,IAAIA,MAAM,CAACJ,MAAM,EAAE;cACjBI,MAAM,CAACL,GAAG,GAAGoB,UAAU;YACzB;UACF,CAAC,CAAC;UAEF,IAAI,IAAI,CAACzB,KAAK,CAACE,aAAa,IAAI,CAAC,EAAE;YACjC,IAAI,CAACU,OAAO,CAAC,CAAC;UAChB;QACF;MACF;MAEArE,QAAQA,CAAA,EAAG;QACT,OAAO;UAAE,GAAG,IAAI,CAACyD;QAAM,CAAC;MAC1B;MAEA0B,QAAQA,CAACC,QAAQ,EAAE;QACjB,IAAI,CAAC3B,KAAK,GAAG;UAAE,GAAG,IAAI,CAACA,KAAK;UAAE,GAAG2B;QAAS,CAAC;MAC7C;MAEAC,MAAMA,CAAA,EAAG;QACP,OAAO,IAAI,CAACvI,aAAa,CAACgB,aAAa,CAAC,CAAC;MAC3C;MAEAwH,QAAQA,CAAA,EAAG;QACT,OAAO,IAAI,CAACV,aAAa,CAAC,CAAC;MAC7B;MAEAA,aAAaA,CAAA,EAAG;QACd,OAAO,IAAI,CAACnB,KAAK,CAACG,OAAO,CAAC2B,MAAM,CAAC,CAAC1G,KAAK,EAAEsF,MAAM,KAAKtF,KAAK,GAAGsF,MAAM,CAACN,KAAK,EAAE,CAAC,CAAC;MAC9E;MAEAY,WAAWA,CAAA,EAAG;QACZ,IAAI,IAAI,CAACR,SAAS,EAAE;UAClBuB,YAAY,CAAC,IAAI,CAACvB,SAAS,CAAC;UAC5B,IAAI,CAACA,SAAS,GAAG,IAAI;QACvB;QACA,IAAI,IAAI,CAAC7G,cAAc,EAAE;UACvBqI,aAAa,CAAC,IAAI,CAACrI,cAAc,CAAC;UAClC,IAAI,CAACA,cAAc,GAAG,IAAI;QAC5B;MACF;MAEAuH,WAAWA,CAAA,EAAG;QACZ;QACA,IAAI,CAACV,SAAS,GAAGG,UAAU,CAAC,MAAM;UAChC,IAAI,CAACC,OAAO,CAAC,CAAC;QAChB,CAAC,EAAE,IAAI,CAACZ,KAAK,CAACE,aAAa,CAAC;MAC9B;IACF;IAEAxD,UAAU,GAAG,IAAIqD,UAAU,CAAC,CAAC;EAC/B,CAAC,CAAC;EAEFkC,SAAS,CAAC,MAAM;IACdvF,UAAU,CAACsE,WAAW,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF5H,QAAQ,CAAC,QAAQ,EAAE,MAAM;IACvBqC,IAAI,CAAC,aAAa,EAAE,MAAM;MACxB,MAAMuE,KAAK,GAAGtD,UAAU,CAACH,QAAQ,CAAC,CAAC;MAEnCb,MAAM,CAACsE,KAAK,CAACxD,IAAI,CAAC,CAACb,IAAI,CAAC,MAAM,CAAC;MAC/BD,MAAM,CAACsE,KAAK,CAACG,OAAO,CAAC,CAAC+B,YAAY,CAAC,CAAC,CAAC;MACrCxG,MAAM,CAACsE,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAACzE,IAAI,CAAC,CAAC,CAAC;MACtCD,MAAM,CAACsE,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAACzE,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;IAEFF,IAAI,CAAC,SAAS,EAAE,MAAM;MACpBiB,UAAU,CAAC+D,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;MAErC,MAAMT,KAAK,GAAGtD,UAAU,CAACH,QAAQ,CAAC,CAAC;MACnCb,MAAM,CAACsE,KAAK,CAACxD,IAAI,CAAC,CAACb,IAAI,CAAC,SAAS,CAAC;MAClCD,MAAM,CAACsE,KAAK,CAACC,QAAQ,CAAC,CAACtE,IAAI,CAAC,QAAQ,CAAC;MACrCD,MAAM,CAACsE,KAAK,CAAC3E,QAAQ,CAAC,CAACM,IAAI,CAAC,KAAK,CAAC;MAClCD,MAAM,CAACsE,KAAK,CAACE,aAAa,CAAC,CAACvE,IAAI,CAAC,KAAK,CAAC;MACvCD,MAAM,CAAC+D,iBAAiB,CAACnE,KAAK,CAAC,CAAC6G,gBAAgB,CAAC,CAAC;IACpD,CAAC,CAAC;IAEF1G,IAAI,CAAC,SAAS,EAAE,MAAM;MACpBiB,UAAU,CAAC+D,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;MACrC/D,UAAU,CAACqE,SAAS,CAAC,CAAC;MAEtB,MAAMf,KAAK,GAAGtD,UAAU,CAACH,QAAQ,CAAC,CAAC;MACnCb,MAAM,CAACsE,KAAK,CAACxD,IAAI,CAAC,CAACb,IAAI,CAAC,QAAQ,CAAC;IACnC,CAAC,CAAC;IAEFF,IAAI,CAAC,SAAS,EAAE,MAAM;MACpBiB,UAAU,CAAC+D,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;MACrC/D,UAAU,CAACqE,SAAS,CAAC,CAAC;MACtBrE,UAAU,CAACuE,UAAU,CAAC,CAAC;MAEvB,MAAMjB,KAAK,GAAGtD,UAAU,CAACH,QAAQ,CAAC,CAAC;MACnCb,MAAM,CAACsE,KAAK,CAACxD,IAAI,CAAC,CAACb,IAAI,CAAC,SAAS,CAAC;IACpC,CAAC,CAAC;IAEFF,IAAI,CAAC,cAAc,EAAE,MAAM;MACzBiB,UAAU,CAAC+D,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;;MAErC;MACA/D,UAAU,CAACL,WAAW,CAAC;QAAEwB,QAAQ,EAAE,CAAC;QAAEhE,SAAS,EAAE;MAAK,CAAC,CAAC;MACxD6C,UAAU,CAACL,WAAW,CAAC;QAAEwB,QAAQ,EAAE,CAAC;QAAEhE,SAAS,EAAE;MAAK,CAAC,CAAC;MAExD,MAAMuI,MAAM,GAAG1F,UAAU,CAACkE,OAAO,CAAC,CAAC;MAEnClF,MAAM,CAAC0G,MAAM,CAAC,CAAClG,cAAc,CAAC,MAAM,CAAC;MACrCR,MAAM,CAAC0G,MAAM,CAAC,CAAClG,cAAc,CAAC,UAAU,CAAC;MACzCR,MAAM,CAAC0G,MAAM,CAAC,CAAClG,cAAc,CAAC,OAAO,CAAC;MACtCR,MAAM,CAAC0G,MAAM,CAAC,CAAClG,cAAc,CAAC,SAAS,CAAC;MACxCR,MAAM,CAAC0G,MAAM,CAAC,CAAClG,cAAc,CAAC,YAAY,CAAC;MAC3CR,MAAM,CAAC0G,MAAM,CAAC5F,IAAI,CAAC,CAACb,IAAI,CAAC,QAAQ,CAAC;MAClCD,MAAM,CAAC0G,MAAM,CAAC/G,QAAQ,CAAC,CAACM,IAAI,CAAC,KAAK,CAAC;IACrC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,YAAY,EAAE,MAAM;MACvBiB,UAAU,CAAC+D,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;MAErC,MAAMc,UAAU,GAAG;QACjB1D,QAAQ,EAAE,CAAC;QACXJ,CAAC,EAAE,GAAG;QACNE,CAAC,EAAE,GAAG;QACN9D,SAAS,EAAE;MACb,CAAC;MAED6C,UAAU,CAACL,WAAW,CAACkF,UAAU,CAAC;MAElC,MAAMvB,KAAK,GAAGtD,UAAU,CAACH,QAAQ,CAAC,CAAC;MACnCb,MAAM,CAACsE,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAACzE,IAAI,CAAC,CAAC,CAAC;MACtCD,MAAM,CAAC+D,iBAAiB,CAAC7F,QAAQ,CAAC,CAACkF,oBAAoB,CAAC,IAAI,CAAC;MAC7DpD,MAAM,CAACiE,gBAAgB,CAACC,cAAc,CAAC,CAACuC,gBAAgB,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEF1G,IAAI,CAAC,cAAc,EAAE,MAAM;MACzB,MAAM8F,UAAU,GAAG;QAAE1D,QAAQ,EAAE,CAAC;QAAEhE,SAAS,EAAE;MAAK,CAAC;MAEnD6C,UAAU,CAACL,WAAW,CAACkF,UAAU,CAAC;MAElC,MAAMvB,KAAK,GAAGtD,UAAU,CAACH,QAAQ,CAAC,CAAC;MACnCb,MAAM,CAACsE,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAACzE,IAAI,CAAC,CAAC,CAAC;MACtCD,MAAM,CAAC+D,iBAAiB,CAAC7F,QAAQ,CAAC,CAACyI,GAAG,CAACF,gBAAgB,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF1G,IAAI,CAAC,UAAU,EAAE,MAAM;MACrBiB,UAAU,CAAC+D,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC;;MAEnC;MACA,KAAK,IAAI5F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B6B,UAAU,CAACL,WAAW,CAAC;UAAEwB,QAAQ,EAAE,CAAC;UAAEhE,SAAS,EAAE,IAAI,GAAGgB,CAAC,GAAG;QAAI,CAAC,CAAC;MACpE;;MAEA;MACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B6B,UAAU,CAACL,WAAW,CAAC;UAAEwB,QAAQ,EAAE,CAAC;UAAEhE,SAAS,EAAE,IAAI,GAAGgB,CAAC,GAAG;QAAI,CAAC,CAAC;MACpE;MAEAa,MAAM,CAACgB,UAAU,CAACyE,aAAa,CAAC,CAAC,CAAC,CAACxF,IAAI,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFvC,QAAQ,CAAC,MAAM,EAAE,MAAM;IACrBqC,IAAI,CAAC,aAAa,EAAE,MAAM;MACxB,MAAM4E,GAAG,GAAG3D,UAAU,CAACkF,MAAM,CAAC,CAAC;MAC/BlG,MAAM,CAAC2E,GAAG,CAAC,CAAC1E,IAAI,CAAC,EAAE,CAAC;MACpBD,MAAM,CAAC+D,iBAAiB,CAACpF,aAAa,CAAC,CAAC8H,gBAAgB,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEF1G,IAAI,CAAC,WAAW,EAAE,MAAM;MACtBiB,UAAU,CAAC+D,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;MACrC/D,UAAU,CAACL,WAAW,CAAC;QAAEwB,QAAQ,EAAE,CAAC;QAAEhE,SAAS,EAAE;MAAK,CAAC,CAAC;MACxD6C,UAAU,CAACL,WAAW,CAAC;QAAEwB,QAAQ,EAAE,CAAC;QAAEhE,SAAS,EAAE;MAAK,CAAC,CAAC;MAExD,MAAMuG,KAAK,GAAG1D,UAAU,CAACmF,QAAQ,CAAC,CAAC;MACnCnG,MAAM,CAAC0E,KAAK,CAAC,CAACzE,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFvC,QAAQ,CAAC,MAAM,EAAE,MAAM;EACrBqC,IAAI,CAAC,UAAU,EAAE,MAAM;IACrB;IACA,MAAMW,cAAc,GAAG;MACrB4D,KAAK,EAAE;QAAExD,IAAI,EAAE;MAAO,CAAC;MACvBiE,SAAS,EAAEhI,IAAI,CAACC,EAAE,CAAC,CAAC;MACpB2D,WAAW,EAAE5D,IAAI,CAACC,EAAE,CAAC,CAAC;MACtBkI,OAAO,EAAEnI,IAAI,CAACC,EAAE,CAAC,CAAC;MAClB6D,QAAQ,EAAE9D,IAAI,CAACC,EAAE,CAAC,OAAO;QAAE8D,IAAI,EAAE;MAAU,CAAC,CAAC;IAC/C,CAAC;IAED,MAAMkD,gBAAgB,GAAG;MACvB4C,mBAAmB,EAAE7J,IAAI,CAACC,EAAE,CAAC,CAAC;MAC9BsE,gBAAgB,EAAEvE,IAAI,CAACC,EAAE,CAAC,CAAC;MAC3B8F,gBAAgB,EAAE/F,IAAI,CAACC,EAAE,CAAC;IAC5B,CAAC;;IAED;IACAgD,MAAM,CAACU,cAAc,CAAC4D,KAAK,CAACxD,IAAI,CAAC,CAACb,IAAI,CAAC,MAAM,CAAC;;IAE9C;IACAS,cAAc,CAACqE,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;IACzC/E,MAAM,CAACU,cAAc,CAACqE,SAAS,CAAC,CAAC3B,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC;;IAEtE;IACA,MAAMyD,UAAU,GAAG;MACjBrF,OAAO,EAAE,CAAC;QAAEc,UAAU,EAAE,CAAC;QAAEN,OAAO,EAAE,GAAG;QAAEE,OAAO,EAAE;MAAI,CAAC;IACzD,CAAC;IACD8B,gBAAgB,CAAC1C,gBAAgB,CAACuF,UAAU,CAAC;IAC7C7G,MAAM,CAACgE,gBAAgB,CAAC1C,gBAAgB,CAAC,CAAC8B,oBAAoB,CAACyD,UAAU,CAAC;;IAE1E;IACAnG,cAAc,CAACwE,OAAO,CAAC,CAAC;IACxBlF,MAAM,CAACU,cAAc,CAACwE,OAAO,CAAC,CAACuB,gBAAgB,CAAC,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}