{"version":3,"names":["IndexedDBAdapter","constructor","config","dbName","version","storeName","db","isAvailable","checkAvailability","window","indexedDB","undefined","e","console","warn","init","Error","Promise","resolve","reject","request","open","onerror","error","message","onsuccess","result","log","event","onupgradeneeded","target","oldVersion","newVersion","objectStoreNames","contains","store","createObjectStore","keyPath","createIndex","unique","getTransaction","mode","transaction","getStore","objectStore","setItem","key","value","options","data","timestamp","Date","now","ttl","expires","put","getItem","get","removeItem","catch","delete","clear","keys","getAllKeys","size","count","cleanupExpiredData","index","range","IDBKeyRange","upperBound","openCursor","deletedCount","cursor","deleteRequest","continue","getStats","itemCount","length","estimatedSize","sampleSize","Math","min","sampleKeys","slice","sampleTotalSize","serialized","JSON","stringify","averageSize","formattedSize","formatBytes","isEstimated","maintenance","stats","deletedExpired","totalItems","close","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","args","debug","exports"],"sources":["indexedDB.js"],"sourcesContent":["/**\n * IndexedDB 適配器\n * 提供標準化的 IndexedDB 介面，支援大容量儲存\n *\n * @author haotool\n * @version 7.2.3\n * @created 2025-08-18T02:39:58+08:00\n */\n\nexport class IndexedDBAdapter {\n  constructor(config = {}) {\n    this.config = {\n      dbName: 'Bunny ClickDB',\n      version: 1,\n      storeName: 'gameData',\n      ...config,\n    };\n\n    this.db = null;\n    this.isAvailable = this.checkAvailability();\n  }\n\n  /**\n   * 檢查 IndexedDB 可用性\n   */\n  checkAvailability() {\n    try {\n      return 'indexedDB' in window &&\n             window.indexedDB !== null &&\n             window.indexedDB !== undefined;\n    } catch (e) {\n      console.warn('⚠️ IndexedDB 不可用:', e);\n      return false;\n    }\n  }\n\n  /**\n   * 初始化 IndexedDB\n   */\n  async init() {\n    if (!this.isAvailable) {\n      throw new Error('IndexedDB 不可用');\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.config.dbName, this.config.version);\n\n      request.onerror = () => {\n        reject(new Error(`IndexedDB 開啟失敗: ${request.error?.message}`));\n      };\n\n      request.onsuccess = () => {\n        this.db = request.result;\n        this.log(`✅ IndexedDB 連接成功: ${this.config.dbName}`);\n\n        // 設定錯誤處理\n        this.db.onerror = (event) => {\n          console.error('❌ IndexedDB 操作錯誤:', event);\n        };\n\n        resolve();\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        this.log(`🔄 IndexedDB 升級: v${event.oldVersion} → v${event.newVersion}`);\n\n        // 建立 object store\n        if (!db.objectStoreNames.contains(this.config.storeName)) {\n          const store = db.createObjectStore(this.config.storeName, { keyPath: 'key' });\n\n          // 建立索引\n          store.createIndex('timestamp', 'timestamp', { unique: false });\n          store.createIndex('expires', 'expires', { unique: false });\n\n          this.log(`📦 建立 Object Store: ${this.config.storeName}`);\n        }\n      };\n    });\n  }\n\n  /**\n   * 獲取交易\n   */\n  getTransaction(mode = 'readonly') {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return this.db.transaction([this.config.storeName], mode);\n  }\n\n  /**\n   * 獲取 Object Store\n   */\n  getStore(mode = 'readonly') {\n    const transaction = this.getTransaction(mode);\n    return transaction.objectStore(this.config.storeName);\n  }\n\n  /**\n   * 儲存資料\n   */\n  async setItem(key, value, options = {}) {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readwrite');\n\n        // 建立資料物件\n        const data = {\n          key,\n          value,\n          timestamp: Date.now(),\n          version: this.config.version,\n        };\n\n        // 添加過期時間 (如果指定)\n        if (options.ttl) {\n          data.expires = Date.now() + options.ttl;\n        }\n\n        const request = store.put(data);\n\n        request.onsuccess = () => {\n          this.log(`💾 IndexedDB 儲存: ${key}`);\n          resolve();\n        };\n\n        request.onerror = () => {\n          reject(new Error(`IndexedDB 儲存失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 讀取資料\n   */\n  async getItem(key) {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readonly');\n        const request = store.get(key);\n\n        request.onsuccess = () => {\n          const result = request.result;\n\n          if (!result) {\n            resolve(null);\n            return;\n          }\n\n          // 檢查是否過期\n          if (result.expires && Date.now() > result.expires) {\n            // 異步移除過期資料\n            this.removeItem(key).catch(error => {\n              this.log(`⚠️ 移除過期資料失敗: ${error.message}`);\n            });\n            this.log(`⏰ 資料已過期: ${key}`);\n            resolve(null);\n            return;\n          }\n\n          this.log(`📖 IndexedDB 讀取: ${key}`);\n          resolve(result.value);\n        };\n\n        request.onerror = () => {\n          reject(new Error(`IndexedDB 讀取失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 移除資料\n   */\n  async removeItem(key) {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readwrite');\n        const request = store.delete(key);\n\n        request.onsuccess = () => {\n          this.log(`🗑️ IndexedDB 移除: ${key}`);\n          resolve();\n        };\n\n        request.onerror = () => {\n          reject(new Error(`IndexedDB 移除失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 清空所有資料\n   */\n  async clear() {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readwrite');\n        const request = store.clear();\n\n        request.onsuccess = () => {\n          this.log('🧹 IndexedDB 清空完成');\n          resolve();\n        };\n\n        request.onerror = () => {\n          reject(new Error(`IndexedDB 清空失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 獲取所有鍵名\n   */\n  async keys() {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readonly');\n        const request = store.getAllKeys();\n\n        request.onsuccess = () => {\n          resolve(request.result || []);\n        };\n\n        request.onerror = () => {\n          reject(new Error(`IndexedDB 獲取鍵名失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 獲取儲存項目數量\n   */\n  async size() {\n    if (!this.db) {\n      throw new Error('IndexedDB 未初始化');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readonly');\n        const request = store.count();\n\n        request.onsuccess = () => {\n          resolve(request.result || 0);\n        };\n\n        request.onerror = () => {\n          reject(new Error(`IndexedDB 計數失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 清理過期資料\n   */\n  async cleanupExpiredData() {\n    if (!this.db) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const store = this.getStore('readwrite');\n        const index = store.index('expires');\n        const now = Date.now();\n\n        // 查詢所有過期的資料\n        const range = IDBKeyRange.upperBound(now);\n        const request = index.openCursor(range);\n\n        let deletedCount = 0;\n\n        request.onsuccess = (event) => {\n          const cursor = event.target.result;\n\n          if (cursor) {\n            // 刪除過期資料\n            const deleteRequest = cursor.delete();\n            deleteRequest.onsuccess = () => {\n              deletedCount++;\n            };\n            cursor.continue();\n          } else {\n            // 遍歷完成\n            if (deletedCount > 0) {\n              this.log(`🧹 清理過期資料: ${deletedCount} 項目`);\n            }\n            resolve(deletedCount);\n          }\n        };\n\n        request.onerror = () => {\n          reject(new Error(`清理過期資料失敗: ${request.error?.message}`));\n        };\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * 獲取使用統計\n   */\n  async getStats() {\n    try {\n      const keys = await this.keys();\n      const itemCount = keys.length;\n\n      // 估算存儲空間使用 (IndexedDB 沒有直接的大小查詢方法)\n      // 這是一個粗略的估算\n      let estimatedSize = 0;\n\n      // 取樣部分資料來估算平均大小\n      const sampleSize = Math.min(10, itemCount);\n      if (sampleSize > 0) {\n        const sampleKeys = keys.slice(0, sampleSize);\n        let sampleTotalSize = 0;\n\n        for (const key of sampleKeys) {\n          const value = await this.getItem(key);\n          if (value !== null) {\n            const serialized = JSON.stringify(value);\n            sampleTotalSize += serialized.length * 2; // UTF-16\n          }\n        }\n\n        const averageSize = sampleTotalSize / sampleSize;\n        estimatedSize = averageSize * itemCount;\n      }\n\n      return {\n        itemCount,\n        estimatedSize,\n        formattedSize: this.formatBytes(estimatedSize),\n        isEstimated: true,\n      };\n\n    } catch (error) {\n      this.log('⚠️ 獲取統計資訊時發生錯誤:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 執行資料庫維護\n   */\n  async maintenance() {\n    try {\n      this.log('🔧 開始 IndexedDB 維護...');\n\n      // 清理過期資料\n      const deletedCount = await this.cleanupExpiredData();\n\n      // 獲取統計資訊\n      const stats = await this.getStats();\n\n      this.log('✅ IndexedDB 維護完成', {\n        deletedExpired: deletedCount,\n        totalItems: stats?.itemCount || 0,\n        estimatedSize: stats?.formattedSize || '未知',\n      });\n\n      return {\n        deletedExpired: deletedCount,\n        stats,\n      };\n\n    } catch (error) {\n      this.log('⚠️ IndexedDB 維護時發生錯誤:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 關閉資料庫連接\n   */\n  close() {\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n      this.log('🔌 IndexedDB 連接已關閉');\n    }\n  }\n\n  /**\n   * 格式化位元組大小\n   */\n  formatBytes(bytes) {\n    if (bytes === 0) {return '0 Bytes';}\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n  }\n\n  /**\n   * 調試日誌\n   */\n  log(...args) {\n    if (this.config.debug) {\n      console.log('🗄️ IndexedDBAdapter:', ...args);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}