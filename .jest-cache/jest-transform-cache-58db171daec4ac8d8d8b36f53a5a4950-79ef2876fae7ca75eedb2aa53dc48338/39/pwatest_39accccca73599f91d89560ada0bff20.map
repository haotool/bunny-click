{"version":3,"names":["global","navigator","serviceWorker","register","jest","fn","ready","Promise","resolve","update","unregister","getRegistration","storage","estimate","quota","usage","persist","window","location","protocol","host","caches","open","delete","keys","Notification","permission","requestPermission","describe","updateManager","mockUpdateSW","beforeEach","clearAllMocks","PWAUpdateManager","constructor","updateSW","isOfflineReady","needRefresh","registration","registerServiceWorker","mockRegisterSW","options","onNeedRefresh","onOfflineReady","onRegistered","setTimeout","showUpdatePrompt","showOfflinePrompt","setInterval","error","console","promptElement","createUpdatePrompt","document","body","appendChild","createOfflinePrompt","hidePrompt","prompts","querySelectorAll","forEach","prompt","remove","div","createElement","className","innerHTML","checkForUpdates","applyUpdate","getStatus","hasRegistration","test","result","expect","toBe","toBeDefined","done","not","toThrow","toHaveBeenCalled","initialStatus","toEqual","finalStatus","cacheManager","mockCache","add","addAll","put","match","CacheManager","cacheName","staticCacheName","preCache","urls","cache","cacheResponse","request","response","clone","getCachedResponse","clearOldCaches","currentVersion","cacheNames","oldCaches","filter","name","startsWith","deletePromises","map","all","length","getCacheStats","itemCount","req","url","toHaveBeenCalledWith","mockRequest","Request","mockResponse","Response","headers","deletedCount","toBeGreaterThanOrEqual","stats","toHaveProperty","offlineManager","onLine","addEventListener","removeEventListener","OfflineManager","isOnline","callbacks","online","offline","setupEventListeners","handleOnline","bind","handleOffline","callback","onOnline","push","onOffline","lastCheck","Date","now","checkConnection","fetch","method","ok","removeEventListeners","status","any","Function","toContain","isConnected","quotaManager","QuotaManager","warningThreshold","criticalThreshold","getStorageEstimate","checkQuota","usagePercentage","available","getQuotaStatus","percentage","requestPersistentStorage","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","quotaInfo","installManager","InstallManager","deferredPrompt","isInstallable","isInstalled","handleBeforeInstallPrompt","handleAppInstalled","event","preventDefault","showInstallPrompt","getInstallStatus","canPrompt","checkIfInstalled","isStandalone","matchMedia","matches","isInWebAppScope","standalone","addListener","removeListener","mockEvent","outcome","toBeNull","mockPrompt"],"sources":["pwa.test.js"],"sourcesContent":["/**\n * PWA 功能測試\n * 測試 Service Worker、更新機制、離線功能等\n *\n * @author haotool\n * @version 7.2.3\n * @created 2025-08-18T02:39:58+08:00\n */\n\n// Mock PWA 相關 API\nglobal.navigator = {\n  serviceWorker: {\n    register: jest.fn(),\n    ready: Promise.resolve({\n      update: jest.fn(),\n      unregister: jest.fn(),\n    }),\n    getRegistration: jest.fn(),\n  },\n  storage: {\n    estimate: jest.fn(() =>\n      Promise.resolve({\n        quota: 10 * 1024 * 1024 * 1024, // 10GB\n        usage: 50 * 1024 * 1024, // 50MB\n      }),\n    ),\n    persist: jest.fn(() => Promise.resolve(true)),\n  },\n};\n\nglobal.window = {\n  ...global.window,\n  navigator: global.navigator,\n  location: {\n    protocol: 'https:',\n    host: 'example.com',\n  },\n  caches: {\n    open: jest.fn(),\n    delete: jest.fn(),\n    keys: jest.fn(),\n  },\n};\n\n// Mock Notification API\nglobal.Notification = {\n  permission: 'default',\n  requestPermission: jest.fn(() => Promise.resolve('granted')),\n};\n\ndescribe('PWAUpdateManager', () => {\n  let updateManager;\n  let mockUpdateSW;\n\n  beforeEach(() => {\n    // 清除所有 mock\n    jest.clearAllMocks();\n\n    // Mock registerSW 函數\n    mockUpdateSW = jest.fn();\n\n    // 模擬 PWAUpdateManager 類別\n    class PWAUpdateManager {\n      constructor() {\n        this.updateSW = null;\n        this.isOfflineReady = false;\n        this.needRefresh = false;\n        this.registration = null;\n      }\n\n      async registerServiceWorker() {\n        try {\n          // 模擬 vite-plugin-pwa 的 registerSW\n          this.updateSW = mockUpdateSW;\n\n          const mockRegisterSW = options => {\n            this.onNeedRefresh = options.onNeedRefresh;\n            this.onOfflineReady = options.onOfflineReady;\n            this.onRegistered = options.onRegistered;\n\n            // 模擬註冊成功\n            setTimeout(() => {\n              this.registration = {\n                update: jest.fn(),\n                unregister: jest.fn(),\n              };\n              this.onRegistered?.(this.registration);\n            }, 100);\n\n            return mockUpdateSW;\n          };\n\n          this.updateSW = mockRegisterSW({\n            onNeedRefresh: () => this.showUpdatePrompt(),\n            onOfflineReady: () => this.showOfflinePrompt(),\n            onRegistered: registration => {\n              this.registration = registration;\n              // 每小時檢查更新\n              setInterval(() => registration.update(), 60 * 60 * 1000);\n            },\n          });\n\n          return true;\n        } catch (error) {\n          console.error('Service Worker 註冊失敗:', error);\n          return false;\n        }\n      }\n\n      showUpdatePrompt() {\n        this.needRefresh = true;\n        // 模擬顯示更新提示\n        const promptElement = this.createUpdatePrompt();\n        document.body?.appendChild(promptElement);\n      }\n\n      showOfflinePrompt() {\n        this.isOfflineReady = true;\n        // 模擬顯示離線就緒提示\n        const promptElement = this.createOfflinePrompt();\n        document.body?.appendChild(promptElement);\n      }\n\n      hidePrompt() {\n        const prompts = document.querySelectorAll('.pwa-prompt');\n        prompts.forEach(prompt => prompt.remove());\n      }\n\n      createUpdatePrompt() {\n        const div = document.createElement('div');\n        div.className = 'pwa-prompt update-prompt';\n        div.innerHTML = `\n          <div class=\"prompt-content\">\n            <p>應用程式有新版本可用</p>\n            <button id=\"update-btn\">更新</button>\n            <button id=\"close-btn\">關閉</button>\n          </div>\n        `;\n        return div;\n      }\n\n      createOfflinePrompt() {\n        const div = document.createElement('div');\n        div.className = 'pwa-prompt offline-prompt';\n        div.innerHTML = `\n          <div class=\"prompt-content\">\n            <p>應用程式已準備好離線使用</p>\n            <button id=\"ok-btn\">確定</button>\n          </div>\n        `;\n        return div;\n      }\n\n      async checkForUpdates() {\n        if (this.registration) {\n          try {\n            await this.registration.update();\n            return true;\n          } catch (error) {\n            console.error('檢查更新失敗:', error);\n            return false;\n          }\n        }\n        return false;\n      }\n\n      async applyUpdate() {\n        if (this.updateSW) {\n          try {\n            await this.updateSW();\n            return true;\n          } catch (error) {\n            console.error('應用更新失敗:', error);\n            return false;\n          }\n        }\n        return false;\n      }\n\n      getStatus() {\n        return {\n          needRefresh: this.needRefresh,\n          isOfflineReady: this.isOfflineReady,\n          hasRegistration: !!this.registration,\n        };\n      }\n    }\n\n    updateManager = new PWAUpdateManager();\n  });\n\n  describe('Service Worker 註冊', () => {\n    test('應該能成功註冊 Service Worker', async () => {\n      const result = await updateManager.registerServiceWorker();\n\n      expect(result).toBe(true);\n      expect(updateManager.updateSW).toBeDefined();\n    });\n\n    test('註冊後應該能獲取 registration', done => {\n      updateManager.registerServiceWorker();\n\n      setTimeout(() => {\n        expect(updateManager.registration).toBeDefined();\n        expect(updateManager.registration.update).toBeDefined();\n        done();\n      }, 150);\n    });\n  });\n\n  describe('更新提示', () => {\n    test('應該能顯示更新提示', () => {\n      // 測試狀態變更，而不是 DOM 操作\n      updateManager.showUpdatePrompt();\n\n      expect(updateManager.needRefresh).toBe(true);\n\n      // 檢查內部狀態而不是 DOM 操作\n      expect(updateManager.needRefresh).toBe(true);\n    });\n\n    test('應該能顯示離線就緒提示', () => {\n      // 測試狀態變更，而不是 DOM 操作\n      updateManager.showOfflinePrompt();\n\n      expect(updateManager.isOfflineReady).toBe(true);\n    });\n\n    test('應該能隱藏提示', () => {\n      // 測試方法調用而不依賴 DOM 操作\n      // 這個方法主要是清理 DOM，測試它不會拋出錯誤即可\n      expect(() => {\n        updateManager.hidePrompt();\n      }).not.toThrow();\n    });\n  });\n\n  describe('更新功能', () => {\n    test('應該能檢查更新', async () => {\n      await updateManager.registerServiceWorker();\n\n      // 等待 registration 設置\n      await new Promise(resolve => setTimeout(resolve, 150));\n\n      const result = await updateManager.checkForUpdates();\n\n      expect(result).toBe(true);\n      expect(updateManager.registration.update).toHaveBeenCalled();\n    });\n\n    test('沒有 registration 時檢查更新應該返回 false', async () => {\n      const result = await updateManager.checkForUpdates();\n      expect(result).toBe(false);\n    });\n\n    test('應該能應用更新', async () => {\n      await updateManager.registerServiceWorker();\n\n      const result = await updateManager.applyUpdate();\n      expect(result).toBe(true);\n      expect(mockUpdateSW).toHaveBeenCalled();\n    });\n  });\n\n  describe('狀態查詢', () => {\n    test('應該能獲取正確的狀態', async () => {\n      const initialStatus = updateManager.getStatus();\n      expect(initialStatus).toEqual({\n        needRefresh: false,\n        isOfflineReady: false,\n        hasRegistration: false,\n      });\n\n      await updateManager.registerServiceWorker();\n      updateManager.showUpdatePrompt();\n      updateManager.showOfflinePrompt();\n\n      const finalStatus = updateManager.getStatus();\n      expect(finalStatus.needRefresh).toBe(true);\n      expect(finalStatus.isOfflineReady).toBe(true);\n    });\n  });\n});\n\ndescribe('Cache Strategy', () => {\n  let cacheManager;\n\n  beforeEach(() => {\n    // Mock Cache API\n    const mockCache = {\n      add: jest.fn(() => Promise.resolve()),\n      addAll: jest.fn(() => Promise.resolve()),\n      put: jest.fn(() => Promise.resolve()),\n      match: jest.fn(() => Promise.resolve(null)),\n      delete: jest.fn(() => Promise.resolve(true)),\n      keys: jest.fn(() => Promise.resolve([])),\n    };\n\n    global.caches = {\n      open: jest.fn(() => Promise.resolve(mockCache)),\n      delete: jest.fn(() => Promise.resolve(true)),\n      keys: jest.fn(() => Promise.resolve(['cache-v1', 'cache-v2'])),\n    };\n\n    // 模擬 CacheManager 類別\n    class CacheManager {\n      constructor() {\n        this.cacheName = 'bunny-click-cache-v1';\n        this.staticCacheName = 'bunny-click-static-v1';\n      }\n\n      async preCache(urls) {\n        try {\n          const cache = await caches.open(this.cacheName);\n          await cache.addAll(urls);\n          return true;\n        } catch (error) {\n          console.error('預快取失敗:', error);\n          return false;\n        }\n      }\n\n      async cacheResponse(request, response) {\n        try {\n          const cache = await caches.open(this.cacheName);\n          await cache.put(request, response.clone());\n          return true;\n        } catch (error) {\n          console.error('快取回應失敗:', error);\n          return false;\n        }\n      }\n\n      async getCachedResponse(request) {\n        try {\n          const cache = await caches.open(this.cacheName);\n          const response = await cache.match(request);\n          return response;\n        } catch (error) {\n          console.error('獲取快取失敗:', error);\n          return null;\n        }\n      }\n\n      async clearOldCaches(currentVersion) {\n        try {\n          const cacheNames = await caches.keys();\n          const oldCaches = cacheNames.filter(\n            name => name.startsWith('bunny-click-') && name !== currentVersion,\n          );\n\n          const deletePromises = oldCaches.map(name => caches.delete(name));\n          await Promise.all(deletePromises);\n\n          return oldCaches.length;\n        } catch (error) {\n          console.error('清理舊快取失敗:', error);\n          return 0;\n        }\n      }\n\n      async getCacheStats() {\n        try {\n          const cache = await caches.open(this.cacheName);\n          const keys = await cache.keys();\n\n          return {\n            cacheName: this.cacheName,\n            itemCount: keys.length,\n            keys: keys.map(req => req.url),\n          };\n        } catch (error) {\n          console.error('獲取快取統計失敗:', error);\n          return null;\n        }\n      }\n    }\n\n    cacheManager = new CacheManager();\n  });\n\n  describe('預快取功能', () => {\n    test('應該能預快取指定 URL', async () => {\n      const urls = ['/index.html', '/styles.css', '/app.js', '/manifest.json'];\n\n      const result = await cacheManager.preCache(urls);\n\n      expect(result).toBe(true);\n      expect(caches.open).toHaveBeenCalledWith('bunny-click-cache-v1');\n    });\n  });\n\n  describe('動態快取', () => {\n    test('應該能快取回應', async () => {\n      const mockRequest = new Request('/api/data');\n      const mockResponse = new Response('{\"data\": \"test\"}', {\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      // Mock Response.clone()\n      mockResponse.clone = jest.fn(() => mockResponse);\n\n      const result = await cacheManager.cacheResponse(mockRequest, mockResponse);\n\n      expect(result).toBe(true);\n      expect(mockResponse.clone).toHaveBeenCalled();\n    });\n\n    test('應該能獲取快取的回應', async () => {\n      const mockRequest = new Request('/api/data');\n\n      const response = await cacheManager.getCachedResponse(mockRequest);\n\n      expect(caches.open).toHaveBeenCalledWith('bunny-click-cache-v1');\n    });\n  });\n\n  describe('快取管理', () => {\n    test('應該能清理舊快取', async () => {\n      const deletedCount = await cacheManager.clearOldCaches('bunny-click-cache-v2');\n\n      expect(deletedCount).toBeGreaterThanOrEqual(0);\n      expect(caches.keys).toHaveBeenCalled();\n    });\n\n    test('應該能獲取快取統計', async () => {\n      const stats = await cacheManager.getCacheStats();\n\n      expect(stats).toHaveProperty('cacheName');\n      expect(stats).toHaveProperty('itemCount');\n      expect(stats).toHaveProperty('keys');\n      expect(stats.cacheName).toBe('bunny-click-cache-v1');\n    });\n  });\n});\n\ndescribe('Offline Detection', () => {\n  let offlineManager;\n\n  beforeEach(() => {\n    // Mock online/offline events\n    global.navigator.onLine = true;\n    global.window.addEventListener = jest.fn();\n    global.window.removeEventListener = jest.fn();\n\n    // 模擬 OfflineManager 類別\n    class OfflineManager {\n      constructor() {\n        this.isOnline = navigator.onLine;\n        this.callbacks = {\n          online: [],\n          offline: [],\n        };\n        this.setupEventListeners();\n      }\n\n      setupEventListeners() {\n        window.addEventListener('online', this.handleOnline.bind(this));\n        window.addEventListener('offline', this.handleOffline.bind(this));\n      }\n\n      handleOnline() {\n        this.isOnline = true;\n        this.callbacks.online.forEach(callback => callback());\n      }\n\n      handleOffline() {\n        this.isOnline = false;\n        this.callbacks.offline.forEach(callback => callback());\n      }\n\n      onOnline(callback) {\n        this.callbacks.online.push(callback);\n      }\n\n      onOffline(callback) {\n        this.callbacks.offline.push(callback);\n      }\n\n      getStatus() {\n        return {\n          isOnline: this.isOnline,\n          lastCheck: Date.now(),\n        };\n      }\n\n      async checkConnection() {\n        try {\n          // 模擬網路檢查\n          const response = await fetch('/ping', {\n            method: 'HEAD',\n            cache: 'no-cache',\n          });\n          return response.ok;\n        } catch (error) {\n          return false;\n        }\n      }\n\n      removeEventListeners() {\n        window.removeEventListener('online', this.handleOnline);\n        window.removeEventListener('offline', this.handleOffline);\n      }\n    }\n\n    // Mock fetch for connection check\n    global.fetch = jest.fn(() =>\n      Promise.resolve({\n        ok: true,\n        status: 200,\n      }),\n    );\n\n    offlineManager = new OfflineManager();\n  });\n\n  describe('事件監聽', () => {\n    test('應該設置線上/離線事件監聽器', () => {\n      expect(window.addEventListener).toHaveBeenCalledWith('online', expect.any(Function));\n      expect(window.addEventListener).toHaveBeenCalledWith('offline', expect.any(Function));\n    });\n\n    test('應該能註冊線上回調', () => {\n      const callback = jest.fn();\n      offlineManager.onOnline(callback);\n\n      expect(offlineManager.callbacks.online).toContain(callback);\n    });\n\n    test('應該能註冊離線回調', () => {\n      const callback = jest.fn();\n      offlineManager.onOffline(callback);\n\n      expect(offlineManager.callbacks.offline).toContain(callback);\n    });\n  });\n\n  describe('狀態檢測', () => {\n    test('應該能獲取連線狀態', () => {\n      const status = offlineManager.getStatus();\n\n      expect(status).toHaveProperty('isOnline');\n      expect(status).toHaveProperty('lastCheck');\n      expect(status.isOnline).toBe(true);\n    });\n\n    test('應該能檢查網路連線', async () => {\n      const isConnected = await offlineManager.checkConnection();\n\n      expect(isConnected).toBe(true);\n      expect(fetch).toHaveBeenCalledWith('/ping', {\n        method: 'HEAD',\n        cache: 'no-cache',\n      });\n    });\n  });\n\n  describe('事件處理', () => {\n    test('線上事件應該觸發回調', () => {\n      const callback = jest.fn();\n      offlineManager.onOnline(callback);\n\n      offlineManager.handleOnline();\n\n      expect(callback).toHaveBeenCalled();\n      expect(offlineManager.isOnline).toBe(true);\n    });\n\n    test('離線事件應該觸發回調', () => {\n      const callback = jest.fn();\n      offlineManager.onOffline(callback);\n\n      offlineManager.handleOffline();\n\n      expect(callback).toHaveBeenCalled();\n      expect(offlineManager.isOnline).toBe(false);\n    });\n  });\n});\n\ndescribe('Storage Quota Management', () => {\n  let quotaManager;\n\n  beforeEach(() => {\n    // 模擬 QuotaManager 類別\n    class QuotaManager {\n      constructor() {\n        this.warningThreshold = 0.8; // 80%\n        this.criticalThreshold = 0.95; // 95%\n      }\n\n      async getStorageEstimate() {\n        if ('storage' in navigator && 'estimate' in navigator.storage) {\n          return await navigator.storage.estimate();\n        }\n        return null;\n      }\n\n      async checkQuota() {\n        const estimate = await this.getStorageEstimate();\n        if (!estimate) {return null;}\n\n        const { quota, usage } = estimate;\n        const usagePercentage = quota > 0 ? usage / quota : 0;\n\n        return {\n          quota,\n          usage,\n          available: quota - usage,\n          usagePercentage,\n          status: this.getQuotaStatus(usagePercentage),\n        };\n      }\n\n      getQuotaStatus(percentage) {\n        if (percentage >= this.criticalThreshold) {return 'critical';}\n        if (percentage >= this.warningThreshold) {return 'warning';}\n        return 'normal';\n      }\n\n      async requestPersistentStorage() {\n        if ('storage' in navigator && 'persist' in navigator.storage) {\n          return await navigator.storage.persist();\n        }\n        return false;\n      }\n\n      formatBytes(bytes) {\n        if (bytes === 0) {return '0 Bytes';}\n        const k = 1024;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n      }\n    }\n\n    quotaManager = new QuotaManager();\n  });\n\n  describe('配額檢查', () => {\n    test('應該能獲取儲存估算', async () => {\n      const estimate = await quotaManager.getStorageEstimate();\n\n      expect(estimate).toHaveProperty('quota');\n      expect(estimate).toHaveProperty('usage');\n      expect(navigator.storage.estimate).toHaveBeenCalled();\n    });\n\n    test('應該能檢查配額狀態', async () => {\n      const quotaInfo = await quotaManager.checkQuota();\n\n      expect(quotaInfo).toHaveProperty('quota');\n      expect(quotaInfo).toHaveProperty('usage');\n      expect(quotaInfo).toHaveProperty('available');\n      expect(quotaInfo).toHaveProperty('usagePercentage');\n      expect(quotaInfo).toHaveProperty('status');\n    });\n\n    test('應該正確判斷配額狀態', () => {\n      expect(quotaManager.getQuotaStatus(0.5)).toBe('normal');\n      expect(quotaManager.getQuotaStatus(0.85)).toBe('warning');\n      expect(quotaManager.getQuotaStatus(0.98)).toBe('critical');\n    });\n  });\n\n  describe('持久化儲存', () => {\n    test('應該能請求持久化儲存', async () => {\n      const result = await quotaManager.requestPersistentStorage();\n\n      expect(result).toBe(true);\n      expect(navigator.storage.persist).toHaveBeenCalled();\n    });\n  });\n\n  describe('工具函數', () => {\n    test('應該正確格式化位元組', () => {\n      expect(quotaManager.formatBytes(0)).toBe('0 Bytes');\n      expect(quotaManager.formatBytes(1024)).toBe('1 KB');\n      expect(quotaManager.formatBytes(1048576)).toBe('1 MB');\n      expect(quotaManager.formatBytes(1073741824)).toBe('1 GB');\n    });\n  });\n});\n\ndescribe('PWA Installation', () => {\n  let installManager;\n\n  beforeEach(() => {\n    // Mock beforeinstallprompt event\n    global.window.addEventListener = jest.fn();\n\n    // 模擬 InstallManager 類別\n    class InstallManager {\n      constructor() {\n        this.deferredPrompt = null;\n        this.isInstallable = false;\n        this.isInstalled = false;\n        this.setupEventListeners();\n      }\n\n      setupEventListeners() {\n        window.addEventListener('beforeinstallprompt', this.handleBeforeInstallPrompt.bind(this));\n        window.addEventListener('appinstalled', this.handleAppInstalled.bind(this));\n      }\n\n      handleBeforeInstallPrompt(event) {\n        event.preventDefault();\n        this.deferredPrompt = event;\n        this.isInstallable = true;\n      }\n\n      handleAppInstalled() {\n        this.isInstalled = true;\n        this.deferredPrompt = null;\n        this.isInstallable = false;\n      }\n\n      async showInstallPrompt() {\n        if (!this.deferredPrompt) {return null;}\n\n        try {\n          const result = await this.deferredPrompt.prompt();\n          this.deferredPrompt = null;\n          this.isInstallable = false;\n          return result;\n        } catch (error) {\n          console.error('安裝提示失敗:', error);\n          return null;\n        }\n      }\n\n      getInstallStatus() {\n        return {\n          isInstallable: this.isInstallable,\n          isInstalled: this.isInstalled,\n          canPrompt: !!this.deferredPrompt,\n        };\n      }\n\n      checkIfInstalled() {\n        // 檢查是否在獨立模式下運行\n        const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n        const isInWebAppScope = window.navigator.standalone === true;\n\n        return isStandalone || isInWebAppScope;\n      }\n    }\n\n    // Mock matchMedia\n    global.window.matchMedia = jest.fn(() => ({\n      matches: false,\n      addListener: jest.fn(),\n      removeListener: jest.fn(),\n    }));\n\n    installManager = new InstallManager();\n  });\n\n  describe('安裝事件處理', () => {\n    test('應該設置安裝事件監聽器', () => {\n      expect(window.addEventListener).toHaveBeenCalledWith(\n        'beforeinstallprompt',\n        expect.any(Function),\n      );\n      expect(window.addEventListener).toHaveBeenCalledWith('appinstalled', expect.any(Function));\n    });\n\n    test('應該處理 beforeinstallprompt 事件', () => {\n      const mockEvent = {\n        preventDefault: jest.fn(),\n        prompt: jest.fn(() => Promise.resolve({ outcome: 'accepted' })),\n      };\n\n      installManager.handleBeforeInstallPrompt(mockEvent);\n\n      expect(mockEvent.preventDefault).toHaveBeenCalled();\n      expect(installManager.isInstallable).toBe(true);\n      expect(installManager.deferredPrompt).toBe(mockEvent);\n    });\n\n    test('應該處理 appinstalled 事件', () => {\n      installManager.deferredPrompt = { prompt: jest.fn() };\n      installManager.isInstallable = true;\n\n      installManager.handleAppInstalled();\n\n      expect(installManager.isInstalled).toBe(true);\n      expect(installManager.deferredPrompt).toBeNull();\n      expect(installManager.isInstallable).toBe(false);\n    });\n  });\n\n  describe('安裝提示', () => {\n    test('應該能顯示安裝提示', async () => {\n      const mockPrompt = jest.fn(() => Promise.resolve({ outcome: 'accepted' }));\n      installManager.deferredPrompt = { prompt: mockPrompt };\n\n      const result = await installManager.showInstallPrompt();\n\n      expect(mockPrompt).toHaveBeenCalled();\n      expect(result).toEqual({ outcome: 'accepted' });\n      expect(installManager.deferredPrompt).toBeNull();\n    });\n\n    test('沒有 deferred prompt 時應該返回 null', async () => {\n      installManager.deferredPrompt = null;\n\n      const result = await installManager.showInstallPrompt();\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe('安裝狀態', () => {\n    test('應該能獲取安裝狀態', () => {\n      const status = installManager.getInstallStatus();\n\n      expect(status).toHaveProperty('isInstallable');\n      expect(status).toHaveProperty('isInstalled');\n      expect(status).toHaveProperty('canPrompt');\n    });\n\n    test('應該能檢查是否已安裝', () => {\n      const isInstalled = installManager.checkIfInstalled();\n      expect(typeof isInstalled).toBe('boolean');\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}