{"version":3,"names":["FDBFactory","require","FDBKeyRange","global","indexedDB","IDBKeyRange","window","requestAnimationFrame","cb","setTimeout","cancelAnimationFrame","clearTimeout","ResizeObserver","constructor","callback","observe","unobserve","disconnect","IntersectionObserver","options","Request","input","init","url","method","headers","Response","body","status","statusText","json","JSON","parse","text","mockNavigator","navigator","onLine","serviceWorker","register","jest","fn","mockResolvedValue","ready","Promise","resolve","getRegistrations","Object","defineProperty","value","writable","configurable","storage","estimate","quota","usage","persist","persisted","process","on","reason","promise","console","error","log"],"sources":["jest.setup.js"],"sourcesContent":["/**\n * Jest 測試環境設置檔案\n * 基於 Jest 最佳實踐，為 CI 環境提供必要的全域模擬\n * 建立時間: 2025-08-26T23:10:06+08:00 [time.now:Asia/Taipei]\n * 負責人: haotool\n */\n\n// 修復 CI 環境中 IndexedDB 不可用的問題\nconst FDBFactory = require('fake-indexeddb/lib/FDBFactory');\nconst FDBKeyRange = require('fake-indexeddb/lib/FDBKeyRange');\n\n// 強制設置 IndexedDB 相關的全域變數\nglobal.indexedDB = global.indexedDB || new FDBFactory();\nglobal.IDBKeyRange = global.IDBKeyRange || FDBKeyRange;\n\n// 確保 JSDOM 環境也有這些變數\nif (typeof window !== 'undefined') {\n  window.indexedDB = window.indexedDB || global.indexedDB;\n  window.IDBKeyRange = window.IDBKeyRange || global.IDBKeyRange;\n}\n\n// 設置 Jest 測試環境的其他全域變數\nif (typeof window !== 'undefined') {\n  // 模擬 requestAnimationFrame 和 cancelAnimationFrame\n  global.requestAnimationFrame = global.requestAnimationFrame || ((cb) => setTimeout(cb, 16));\n  global.cancelAnimationFrame = global.cancelAnimationFrame || clearTimeout;\n  \n  // 模擬 ResizeObserver\n  global.ResizeObserver = global.ResizeObserver || class ResizeObserver {\n    constructor(callback) {\n      this.callback = callback;\n    }\n    observe() {\n      // 模擬實作\n    }\n    unobserve() {\n      // 模擬實作\n    }\n    disconnect() {\n      // 模擬實作\n    }\n  };\n  \n  // 模擬 IntersectionObserver\n  global.IntersectionObserver = global.IntersectionObserver || class IntersectionObserver {\n    constructor(callback, options) {\n      this.callback = callback;\n      this.options = options;\n    }\n    observe() {\n      // 模擬實作\n    }\n    unobserve() {\n      // 模擬實作\n    }\n    disconnect() {\n      // 模擬實作\n    }\n  };\n  \n  // 模擬 Request 和 Response API (Fetch API)\n  global.Request = global.Request || class Request {\n    constructor(input, init) {\n      this.url = input;\n      this.method = (init && init.method) || 'GET';\n      this.headers = (init && init.headers) || {};\n    }\n  };\n  \n  global.Response = global.Response || class Response {\n    constructor(body, init) {\n      this.body = body;\n      this.status = (init && init.status) || 200;\n      this.statusText = (init && init.statusText) || 'OK';\n      this.headers = (init && init.headers) || {};\n    }\n    \n    async json() {\n      return JSON.parse(this.body);\n    }\n    \n    async text() {\n      return this.body;\n    }\n  };\n  \n  // 模擬 Navigator 可設置屬性\n  const mockNavigator = {\n    ...global.navigator,\n    onLine: true,\n    serviceWorker: {\n      register: jest.fn().mockResolvedValue({}),\n      ready: Promise.resolve({}),\n      getRegistrations: jest.fn().mockResolvedValue([])\n    }\n  };\n  \n  Object.defineProperty(global, 'navigator', {\n    value: mockNavigator,\n    writable: true\n  });\n  \n  Object.defineProperty(global.navigator, 'onLine', {\n    value: true,\n    writable: true,\n    configurable: true\n  });\n  \n  // 模擬 Storage API\n  global.navigator.storage = global.navigator.storage || {\n    estimate: jest.fn().mockResolvedValue({ quota: 1000000, usage: 50000 }),\n    persist: jest.fn().mockResolvedValue(true),\n    persisted: jest.fn().mockResolvedValue(false)\n  };\n}\n\n// 設置測試超時時間（5 秒）\njest.setTimeout(5000);\n\n// 設置全域錯誤處理\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n});\n\nconsole.log('✅ Jest 測試環境設置完成');\n"],"mappings":"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","ignoreList":[]}