{"version":3,"names":["LocalStorageAdapter","constructor","config","prefix","dbName","isAvailable","checkAvailability","testKey","localStorage","setItem","removeItem","e","console","warn","init","Error","cleanupExpiredData","log","keys","Object","prefixedKeys","filter","key","startsWith","data","JSON","parse","getItem","__expires","Date","now","parseError","error","getFullKey","value","options","fullKey","wrappedData","__timestamp","__version","version","ttl","serializedData","stringify","length","formatBytes","name","cleanupOldData","retryError","message","hasOwnProperty","clear","map","substring","size","dataWithTimestamp","timestamp","push","sort","a","b","itemsToRemove","Math","ceil","i","bytes","k","sizes","floor","parseFloat","pow","toFixed","args","debug","getStats","totalSize","itemCount","formattedSize","maxSize","usagePercentage","exports"],"sources":["localStorage.js"],"sourcesContent":["/**\n * LocalStorage 適配器\n * 提供標準化的 LocalStorage 介面\n *\n * @author haotool\n * @version 7.2.3\n * @created 2025-08-18T02:39:58+08:00\n */\n\nexport class LocalStorageAdapter {\n  constructor(config = {}) {\n    this.config = config;\n    this.prefix = config.dbName ? `${config.dbName}:` : 'bunny-click:';\n    this.isAvailable = this.checkAvailability();\n  }\n\n  /**\n   * 檢查 LocalStorage 可用性\n   */\n  checkAvailability() {\n    try {\n      const testKey = '__storage_test__';\n      localStorage.setItem(testKey, 'test');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      console.warn('⚠️ LocalStorage 不可用:', e);\n      return false;\n    }\n  }\n\n  /**\n   * 初始化\n   */\n  async init() {\n    if (!this.isAvailable) {\n      throw new Error('LocalStorage 不可用');\n    }\n\n    // 清理過期資料\n    await this.cleanupExpiredData();\n\n    this.log('✅ LocalStorage 適配器初始化完成');\n  }\n\n  /**\n   * 清理過期資料\n   */\n  async cleanupExpiredData() {\n    try {\n      const keys = Object.keys(localStorage);\n      const prefixedKeys = keys.filter(key => key.startsWith(this.prefix));\n\n      for (const key of prefixedKeys) {\n        try {\n          const data = JSON.parse(localStorage.getItem(key));\n\n          // 檢查是否有過期時間且已過期\n          if (data && data.__expires && Date.now() > data.__expires) {\n            localStorage.removeItem(key);\n            this.log(`🧹 清理過期資料: ${key}`);\n          }\n        } catch (parseError) {\n          // 如果解析失敗，可能是舊格式資料，保留不動\n          this.log(`⚠️ 跳過無法解析的資料: ${key}`);\n        }\n      }\n    } catch (error) {\n      this.log('⚠️ 清理過期資料時發生錯誤:', error);\n    }\n  }\n\n  /**\n   * 生成完整鍵名\n   */\n  getFullKey(key) {\n    return `${this.prefix}${key}`;\n  }\n\n  /**\n   * 儲存資料\n   */\n  async setItem(key, value, options = {}) {\n    if (!this.isAvailable) {\n      throw new Error('LocalStorage 不可用');\n    }\n\n    try {\n      const fullKey = this.getFullKey(key);\n\n      // 包裝資料，添加元資訊\n      const wrappedData = {\n        value,\n        __timestamp: Date.now(),\n        __version: this.config.version || 1,\n      };\n\n      // 添加過期時間 (如果指定)\n      if (options.ttl) {\n        wrappedData.__expires = Date.now() + options.ttl;\n      }\n\n      const serializedData = JSON.stringify(wrappedData);\n\n      // 檢查大小限制 (LocalStorage 通常限制為 5-10MB)\n      if (serializedData.length > 5 * 1024 * 1024) {\n        throw new Error('資料過大，超出 LocalStorage 限制');\n      }\n\n      localStorage.setItem(fullKey, serializedData);\n      this.log(`💾 LocalStorage 儲存: ${key} (${this.formatBytes(serializedData.length)})`);\n\n    } catch (error) {\n      if (error.name === 'QuotaExceededError' || error.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n        // 配額超出，嘗試清理舊資料\n        await this.cleanupOldData();\n\n        // 再次嘗試儲存\n        try {\n          const fullKey = this.getFullKey(key);\n          const wrappedData = { value, __timestamp: Date.now() };\n          localStorage.setItem(fullKey, JSON.stringify(wrappedData));\n          this.log(`💾 LocalStorage 儲存 (清理後): ${key}`);\n        } catch (retryError) {\n          throw new Error(`LocalStorage 配額已滿且清理後仍無法儲存: ${retryError.message}`);\n        }\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * 讀取資料\n   */\n  async getItem(key) {\n    if (!this.isAvailable) {\n      throw new Error('LocalStorage 不可用');\n    }\n\n    try {\n      const fullKey = this.getFullKey(key);\n      const serializedData = localStorage.getItem(fullKey);\n\n      if (serializedData === null) {\n        return null;\n      }\n\n      const wrappedData = JSON.parse(serializedData);\n\n      // 檢查是否過期\n      if (wrappedData.__expires && Date.now() > wrappedData.__expires) {\n        localStorage.removeItem(fullKey);\n        this.log(`⏰ 資料已過期並移除: ${key}`);\n        return null;\n      }\n\n      // 相容性處理：如果沒有包裝結構，直接返回原始資料\n      if (wrappedData.hasOwnProperty('value')) {\n        this.log(`📖 LocalStorage 讀取: ${key}`);\n        return wrappedData.value;\n      } else {\n        // 舊格式資料\n        this.log(`📖 LocalStorage 讀取 (舊格式): ${key}`);\n        return wrappedData;\n      }\n\n    } catch (error) {\n      console.error(`❌ LocalStorage 讀取失敗 ${key}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * 移除資料\n   */\n  async removeItem(key) {\n    if (!this.isAvailable) {\n      throw new Error('LocalStorage 不可用');\n    }\n\n    const fullKey = this.getFullKey(key);\n    localStorage.removeItem(fullKey);\n    this.log(`🗑️ LocalStorage 移除: ${key}`);\n  }\n\n  /**\n   * 清空所有資料\n   */\n  async clear() {\n    if (!this.isAvailable) {\n      throw new Error('LocalStorage 不可用');\n    }\n\n    const keys = Object.keys(localStorage);\n    const prefixedKeys = keys.filter(key => key.startsWith(this.prefix));\n\n    for (const key of prefixedKeys) {\n      localStorage.removeItem(key);\n    }\n\n    this.log(`🧹 LocalStorage 清空: ${prefixedKeys.length} 項目`);\n  }\n\n  /**\n   * 獲取所有鍵名\n   */\n  async keys() {\n    if (!this.isAvailable) {\n      throw new Error('LocalStorage 不可用');\n    }\n\n    const keys = Object.keys(localStorage);\n    return keys\n      .filter(key => key.startsWith(this.prefix))\n      .map(key => key.substring(this.prefix.length));\n  }\n\n  /**\n   * 獲取儲存項目數量\n   */\n  async size() {\n    const keys = await this.keys();\n    return keys.length;\n  }\n\n  /**\n   * 清理舊資料 (當配額不足時)\n   */\n  async cleanupOldData() {\n    try {\n      const keys = Object.keys(localStorage);\n      const prefixedKeys = keys.filter(key => key.startsWith(this.prefix));\n\n      // 獲取所有資料的時間戳記\n      const dataWithTimestamp = [];\n\n      for (const key of prefixedKeys) {\n        try {\n          const data = JSON.parse(localStorage.getItem(key));\n          const timestamp = data.__timestamp || 0;\n          dataWithTimestamp.push({ key, timestamp });\n        } catch (e) {\n          // 無法解析的資料視為最舊\n          dataWithTimestamp.push({ key, timestamp: 0 });\n        }\n      }\n\n      // 按時間戳記排序，移除最舊的 25% 資料\n      dataWithTimestamp.sort((a, b) => a.timestamp - b.timestamp);\n      const itemsToRemove = Math.ceil(dataWithTimestamp.length * 0.25);\n\n      for (let i = 0; i < itemsToRemove; i++) {\n        localStorage.removeItem(dataWithTimestamp[i].key);\n        this.log(`🧹 清理舊資料: ${dataWithTimestamp[i].key}`);\n      }\n\n      this.log(`🧹 清理完成，移除 ${itemsToRemove} 項舊資料`);\n\n    } catch (error) {\n      this.log('⚠️ 清理舊資料時發生錯誤:', error);\n    }\n  }\n\n  /**\n   * 格式化位元組大小\n   */\n  formatBytes(bytes) {\n    if (bytes === 0) {return '0 Bytes';}\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n  }\n\n  /**\n   * 調試日誌\n   */\n  log(...args) {\n    if (this.config.debug) {\n      console.log('📝 LocalStorageAdapter:', ...args);\n    }\n  }\n\n  /**\n   * 獲取使用統計\n   */\n  async getStats() {\n    try {\n      const keys = await this.keys();\n      let totalSize = 0;\n\n      for (const key of keys) {\n        const fullKey = this.getFullKey(key);\n        const data = localStorage.getItem(fullKey);\n        if (data) {\n          totalSize += data.length * 2; // UTF-16 字符佔 2 位元組\n        }\n      }\n\n      return {\n        itemCount: keys.length,\n        totalSize,\n        formattedSize: this.formatBytes(totalSize),\n        maxSize: 5 * 1024 * 1024, // 5MB 估計值\n        usagePercentage: (totalSize / (5 * 1024 * 1024)) * 100,\n      };\n    } catch (error) {\n      this.log('⚠️ 獲取統計資訊時發生錯誤:', error);\n      return null;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}