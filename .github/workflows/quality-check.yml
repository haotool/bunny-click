# 品質檢查工作流程
# 基於 .cursor/rules/quality.mdc 規範的 CI/CD 自動化
# 建立時間: 2025-08-26T23:10:06+08:00 [time.now:Asia/Taipei]
# 負責人: haotool

name: 🔍 品質檢查

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  CACHE_PREFIX: v1

jobs:
  # 程式碼品質檢查
  code-quality:
    name: 📝 程式碼品質
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 安裝依賴
        run: npm ci

      - name: 🧹 ESLint 檢查
        run: npm run lint:check

      - name: 💅 Prettier 格式檢查
        run: npm run format:check

  # 測試與覆蓋率檢查
  test-coverage:
    name: 🧪 測試與覆蓋率
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 安裝依賴
        run: npm ci

      - name: 🧪 執行測試
        run: npm run test:ci

      - name: 📊 上傳覆蓋率報告
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # 安全性檢查
  security-audit:
    name: 🔒 安全性檢查
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 安裝依賴
        run: npm ci

      - name: 🔍 npm 安全掃描
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: 🛡️ 依賴漏洞檢查
        uses: actions/dependency-review-action@v3
        if: github.event_name == 'pull_request'

  # 建置測試
  build-test:
    name: 🏗️ 建置測試
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 安裝依賴
        run: npm ci

      - name: 🏗️ 建置專案
        run: npm run build

      - name: 📦 上傳建置產物
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # Lighthouse PWA 檢查
  lighthouse-pwa:
    name: 💡 Lighthouse PWA
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 安裝依賴
        run: npm ci

      - name: 📦 下載建置產物
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 💡 執行 Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # 品質門檻總檢查
  quality-gates:
    name: 🎯 品質門檻
    runs-on: ubuntu-latest
    needs: [code-quality, test-coverage, security-audit, build-test]

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 安裝依賴
        run: npm ci

      - name: 📦 下載建置產物
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🎯 執行品質門檻檢查
        run: npm run quality:check

      - name: 📊 品質報告摘要
        run: |
          echo "## 🎯 品質檢查結果" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 程式碼品質檢查通過" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 測試覆蓋率達標" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 安全性檢查通過" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 建置測試成功" >> $GITHUB_STEP_SUMMARY
